"use strict";(self.webpackChunk_hirosystems_docs=self.webpackChunk_hirosystems_docs||[]).push([[1878],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(a),u=r,k=d["".concat(s,".").concat(u)]||d[u]||m[u]||o;return a?n.createElement(k,i(i({ref:t},p),{},{components:a})):n.createElement(k,i({ref:t},p))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},70924:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const o={title:"Getting started"},i=void 0,l={unversionedId:"token-metadata-api/getting-started",id:"token-metadata-api/getting-started",title:"Getting started",description:"The Token metadata API is a microservice with hard dependencies on other Stacks blockchain components. Before you start, you'll need to have access to the following:",source:"@site/docs/token-metadata-api/getting-started.md",sourceDirName:"token-metadata-api",slug:"/token-metadata-api/getting-started",permalink:"/doc/token-metadata-api/getting-started",draft:!1,editUrl:"https://github.com/CapybaraIO/doc/tree/main/docs/token-metadata-api/getting-started.md",tags:[],version:"current",lastUpdatedAt:1703206175,formattedLastUpdatedAt:"Dec 22, 2023",frontMatter:{title:"Getting started"},sidebar:"token-metadata-api",previous:{title:"Overview",permalink:"/doc/token-metadata-api/"},next:{title:"Token Metadata API",permalink:"/doc/token-metadata-api/feature-guides/token-metadata-api"}},s={},c=[{value:"Run service",id:"run-service",level:2}],p={toc:c},d="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The Token metadata API is a microservice with hard dependencies on other Stacks blockchain components. Before you start, you'll need to have access to the following:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"A fully synchronized ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/stacks-network/stacks-blockchain"},"Stacks node")),(0,r.kt)("li",{parentName:"ol"},"A fully synchronized instance of the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/hirosystems/stacks-blockchain-api"},"Stacks Blockchain API")," running in ",(0,r.kt)("inlineCode",{parentName:"li"},"default")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"write-only")," mode, with its Postgres database exposed for new connections. A read-only DB replica is also acceptable"),(0,r.kt)("li",{parentName:"ol"},"A local writeable Postgres database for token metadata storage")),(0,r.kt)("h2",{id:"run-service"},"Run service"),(0,r.kt)("p",null,"This section helps you to initiate the service by following the steps below."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Clone the repository by using the following command:"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"git clone https://github.com/hirosystems/token-metadata-api.git"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file and specify the appropriate values to configure access to the Stacks API database, the Token metadata API local database, and the Stacks node RPC interface. See ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hirosystems/token-metadata-api/tree/master/src/env.ts"},(0,r.kt)("inlineCode",{parentName:"a"},"env.ts"))," for all available configuration options.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Build the app (NodeJS v18+ is required)"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"npm install\nnpm run build\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start the service"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"npm run start\n")))))}m.isMDXComponent=!0}}]);