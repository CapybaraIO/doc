"use strict";(self.webpackChunk_hirosystems_docs=self.webpackChunk_hirosystems_docs||[]).push([[5394],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(67294);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,c=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(r),m=c,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(h,o(o({ref:t},p),{},{components:r})):n.createElement(h,o({ref:t},p))}));function h(e,t){var r=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var a=r.length,o=new Array(a);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:c,o[1]=i;for(var s=2;s<a;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},73612:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=r(87462),c=(r(67294),r(3905));const a={title:"Check Contracts"},o=void 0,i={unversionedId:"clarinet/guides/how-to-check-contract",id:"clarinet/guides/how-to-check-contract",title:"Check Contracts",description:"Clarinet provides syntax and semantics checkers for Clarity.",source:"@site/docs/clarinet/guides/how-to-check-contract.md",sourceDirName:"clarinet/guides",slug:"/clarinet/guides/how-to-check-contract",permalink:"/clarinet/guides/how-to-check-contract",draft:!1,editUrl:"https://github.com/hirosystems/docs/tree/main/docs/clarinet/guides/how-to-check-contract.md",tags:[],version:"current",frontMatter:{title:"Check Contracts"},sidebar:"clarinet",previous:{title:"Add new Contract",permalink:"/clarinet/guides/how-to-add-contract"},next:{title:"Debug Contract",permalink:"/clarinet/guides/how-to-debug-contract"}},l={},s=[{value:"Contracts",id:"contracts",level:2}],p={toc:s},u="wrapper";function d(e){let{components:t,...r}=e;return(0,c.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"Clarinet provides syntax and semantics checkers for Clarity. "),(0,c.kt)("p",null,(0,c.kt)("em",{parentName:"p"},"Topic covered in this guide"),":"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"#contracts"},"Check your contracts"))),(0,c.kt)("h2",{id:"contracts"},"Contracts"),(0,c.kt)("p",null,"You can verify if the Clarity code in your project is valid with the command listed below."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"clarinet check\n")),(0,c.kt)("p",null,"This command uses the ",(0,c.kt)("inlineCode",{parentName:"p"},"Clarinet.toml")," file to locate and analyze all the contracts in the project.\nIf the Clarity code is valid, the command will indicate success with the response below."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"\u2714 2 contracts checked\n")),(0,c.kt)("p",null,"The command may also report warnings indicating the code is valid."),(0,c.kt)("p",null,"You may also perform a syntax-check on a single file by using the command below."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},"clarinet check <path/to/file.clar>\n")),(0,c.kt)("p",null,"The command output will be a success message if there are no syntax errors."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"\u2714 Syntax of contract successfully checked\n")),(0,c.kt)("p",null,"Any syntactical errors in the Clarity code will be reported, but type-checking and other semantic checks are not performed.\nThis is because Clarinet is only looking at this one contract and needs the full context to perform a complete check."))}d.isMDXComponent=!0}}]);