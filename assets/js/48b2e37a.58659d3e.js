"use strict";(self.webpackChunk_hirosystems_docs=self.webpackChunk_hirosystems_docs||[]).push([[3424],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),d=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(r),h=i,f=p["".concat(s,".").concat(h)]||p[h]||u[h]||l;return r?n.createElement(f,a(a({ref:t},c),{},{components:r})):n.createElement(f,a({ref:t},c))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=r.length,a=new Array(l);a[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:i,a[1]=o;for(var d=2;d<l;d++)a[d]=r[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},34881:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=r(87462),i=(r(67294),r(3905));const l={},a="Get recent reward slot holder entries for the given address",o={type:"api",id:"get-recent-reward-slot-holder-entries-for-the-given-address",unversionedId:"get-recent-reward-slot-holder-entries-for-the-given-address",title:"Get recent reward slot holder entries for the given address",description:"",slug:"/get-recent-reward-slot-holder-entries-for-the-given-address",frontMatter:{},api:{description:"Retrieves a list of the Bitcoin addresses that would validly receive Proof-of-Transfer commitments for a given reward slot holder recipient address.",tags:["Stacking Rewards"],operationId:"get_burnchain_reward_slot_holders_by_address",parameters:[{name:"address",in:"path",description:"Reward slot holder recipient address. Should either be in the native burnchain's format (e.g. B58 for Bitcoin), or if a STX principal address is provided it will be encoded as into the equivalent burnchain format",required:!0,schema:{type:"string"},example:"36hQtSEXBMevo5chpxhfAGiCTSC34QKgda"},{name:"limit",in:"query",description:"max number of items to fetch",required:!1,schema:{type:"integer"}},{name:"offset",in:"query",description:"index of the first items to fetch",required:!1,schema:{type:"integer"}}],responses:{200:{description:"List of burnchain reward recipients and amounts",content:{"application/json":{schema:{description:"GET request that returns reward slot holders",additionalProperties:!1,title:"BurnchainRewardSlotHolderListResponse",type:"object",required:["results","limit","offset","total"],properties:{limit:{type:"integer",maximum:30,description:"The number of items to return"},offset:{type:"integer",description:"The number of items to skip (starting at `0`)",default:0},total:{type:"integer",description:"Total number of available items"},results:{type:"array",items:{title:"BurnchainRewardSlotHolder",description:"Reward slot holder on the burnchain",type:"object",additionalProperties:!1,required:["canonical","burn_block_hash","burn_block_height","address","slot_index"],properties:{canonical:{type:"boolean",description:"Set to `true` if block corresponds to the canonical burchchain tip"},burn_block_hash:{type:"string",description:"The hash representing the burnchain block"},burn_block_height:{type:"integer",description:"Height of the burnchain block"},address:{type:"string",description:"The recipient address that validly received PoX commitments, in the format native to the burnchain (e.g. B58 encoded for Bitcoin)"},slot_index:{type:"integer",description:"The index position of the reward entry, useful for ordering when there's more than one slot per burnchain block"}}}}}},example:{limit:20,offset:0,total:2,results:[{canonical:!0,burn_block_hash:"0x4eaabcd105865e471f697eff5dd5bd85d47ecb5a26a3379d74fae0ae87c40904",burn_block_height:331,address:"1C56LYirKa3PFXFsvhSESgDy2acEHVAEt6",slot_index:0},{canonical:!0,burn_block_hash:"0x4eaabcd105865e471f697eff5dd5bd85d47ecb5a26a3379d74fae0ae87c40904",burn_block_height:331,address:"1M3bvWB9CRh5BTumeVxtHDEV6W4S2R9AZw",slot_index:0}]}}}}},method:"get",path:"/extended/v1/burnchain/reward_slot_holders/{address}",servers:[{url:"https://api.mainnet.hiro.so/",description:"Mainnet"},{url:"https://api.testnet.hiro.so/",description:"Testnet"},{url:"http://localhost:3999/",description:"Local"}],info:{title:"Stacks Blockchain API",version:"v7.3.0",description:'Welcome to the API reference overview for the <a href="https://docs.hiro.so/get-started/stacks-blockchain-api">Stacks Blockchain API</a>.\n\n<a href="https://hirosystems.github.io/stacks-blockchain-api/collection.json" download="stacks-api-collection.json">Download Postman collection</a>\n'},postman:{name:"Get recent reward slot holder entries for the given address",description:{content:"Retrieves a list of the Bitcoin addresses that would validly receive Proof-of-Transfer commitments for a given reward slot holder recipient address.",type:"text/plain"},url:{path:["extended","v1","burnchain","reward_slot_holders",":address"],host:["{{baseUrl}}"],query:[{description:{content:"max number of items to fetch",type:"text/plain"},key:"limit",value:"<integer>"},{description:{content:"index of the first items to fetch",type:"text/plain"},key:"offset",value:"<integer>"}],variable:[{description:{content:"(Required) Reward slot holder recipient address. Should either be in the native burnchain's format (e.g. B58 for Bitcoin), or if a STX principal address is provided it will be encoded as into the equivalent burnchain format",type:"text/plain"},type:"any",value:"<string>",key:"address"}]},method:"GET"}},source:"@site/openapi/stacks-blockchain-api.json",sourceDirName:".",permalink:"/doc/api/get-recent-reward-slot-holder-entries-for-the-given-address",previous:{title:"Get recent reward slot holders",permalink:"/doc/api/get-recent-reward-slot-holders"},next:{title:"Get recent burnchain reward recipients",permalink:"/doc/api/get-recent-burnchain-reward-recipients"}},s=[],d={toc:s},c="wrapper";function p(e){let{components:t,...r}=e;return(0,i.kt)(c,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"get-recent-reward-slot-holder-entries-for-the-given-address"},"Get recent reward slot holder entries for the given address"),(0,i.kt)("p",null,"Retrieves a list of the Bitcoin addresses that would validly receive Proof-of-Transfer commitments for a given reward slot holder recipient address."),(0,i.kt)("table",{style:{display:"table",width:"100%"}},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{style:{textAlign:"left"}},"Path Parameters"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"address"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"Reward slot holder recipient address. Should either be in the native burnchain's format (e.g. B58 for Bitcoin), or if a STX principal address is provided it will be encoded as into the equivalent burnchain format")),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: 36hQtSEXBMevo5chpxhfAGiCTSC34QKgda"))))),(0,i.kt)("table",{style:{display:"table",width:"100%"}},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{style:{textAlign:"left"}},"Query Parameters"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"limit"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"max number of items to fetch")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"offset"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"index of the first items to fetch")))))),(0,i.kt)("table",{style:{display:"table",width:"100%"}},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("div",{style:{display:"flex"}},(0,i.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,i.kt)("code",null,"200")),(0,i.kt)("div",null,(0,i.kt)("p",null,"List of burnchain reward recipients and amounts"))),(0,i.kt)("div",null,(0,i.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,i.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,i.kt)("div",null)))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"limit"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Possible values:")," value \u2264 30")),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The number of items to return")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"offset"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The number of items to skip (starting at ",(0,i.kt)("inlineCode",{parentName:"p"},"0"),")")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"total"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"Total number of available items")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"results"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]"),(0,i.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"canonical"),(0,i.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"Set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," if block corresponds to the canonical burchchain tip")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"burn_block_hash"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The hash representing the burnchain block")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"burn_block_height"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"Height of the burnchain block")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"address"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The recipient address that validly received PoX commitments, in the format native to the burnchain (e.g. B58 encoded for Bitcoin)")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"slot_index"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The index position of the reward entry, useful for ordering when there's more than one slot per burnchain block"))))))))))))))))}p.isMDXComponent=!0}}]);