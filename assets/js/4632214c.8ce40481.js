"use strict";(self.webpackChunk_hirosystems_docs=self.webpackChunk_hirosystems_docs||[]).push([[4022],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),h=r,f=d["".concat(l,".").concat(h)]||d[h]||u[h]||o;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},24654:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={toc:[{value:"StacksProvider injected variable",id:"stacksprovider-injected-variable",level:2}]},i="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(i,(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"stacksprovider-injected-variable"},"StacksProvider injected variable"),(0,r.kt)("p",null,"When users have the ",(0,r.kt)("a",{parentName:"p",href:"https://leather.io/install-extension"},"Leather Wallet")," extension installed, the extension will inject a global ",(0,r.kt)("inlineCode",{parentName:"p"},"StacksProvider")," variable into the JavaScript context of your web app. This allows your JavaScript code to hook into the extension, and make authentication, transaction and signature requests. ",(0,r.kt)("inlineCode",{parentName:"p"},"@stacks/connect")," automatically detects and uses this global variable for you."),(0,r.kt)("p",null,"At the moment, only the Leather Wallet extension and the Xverse built-in browswer includes a ",(0,r.kt)("inlineCode",{parentName:"p"},"StacksProvider"),", however, ideally more wallets (and mobile wallets) will support this format, so that your app can be compatible with any Stacks wallet that has functionality to embed web applications."),(0,r.kt)("p",null,"In your web application, you can check to see if the user has a compatible wallet installed by checking for the presence of ",(0,r.kt)("inlineCode",{parentName:"p"},"window.StacksProvider"),"."),(0,r.kt)("p",null,"Here is the interface for the ",(0,r.kt)("inlineCode",{parentName:"p"},"StacksProvider")," variable."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"interface StacksProvider {\n  transactionRequest(payload: string): Promise<FinishedTxPayload | SponsoredFinishedTxPayload>;\n  authenticationRequest(payload: string): Promise<string>;\n  signatureRequest(payload: string): Promise<SignatureData>;\n  structuredDataSignatureRequest(payload: string): Promise<SignatureData>;\n  profileUpdateRequest(payload: string): Promise<PublicProfile>;\n  getProductInfo:\n    | undefined\n    | (() => {\n        version: string;\n        name: string;\n        meta?: {\n          tag?: string;\n          commit?: string;\n          [key: string]: any;\n        };\n        [key: string]: any;\n      });\n}\n")))}s.isMDXComponent=!0},53256:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={toc:[]},i="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(i,(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("a",{class:"block p-4 text-neutral-800 dark:text-neutral-100 hover:bg-neutral-100 hover:dark:bg-neutral-600 bg-neutral-200 rounded-lg dark:bg-neutral-700 mb-6 hover:no-underline hover:text-neutral-800 hover:dark:text-neutral-100 transition-colors",href:"https://docs.hiro.so/stacksjs-starters"},(0,r.kt)("span",{class:"i-radix-icons-lightning-bolt align-text-bottom text-lg"})," Bootstrap your project with ",(0,r.kt)("strong",null,"Stacks.js Starters"),", which come with Stacks Connect pre-installed ",(0,r.kt)("span",{class:"i-bi-globe2 align-text-bottom text-lg"})))}s.isMDXComponent=!0},27235:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var a=n(87462),r=(n(67294),n(3905)),o=n(53256),i=n(24654);const s={title:"Update User Profile"},l=void 0,p={unversionedId:"stacks.js/guides/update-profile",id:"stacks.js/guides/update-profile",title:"Update User Profile",description:"This guide explains how to change the universal profile of an authenticated user.",source:"@site/docs/stacks.js/guides/update-profile.md",sourceDirName:"stacks.js/guides",slug:"/stacks.js/guides/update-profile",permalink:"/doc/stacks.js/guides/update-profile",draft:!1,editUrl:"https://github.com/CapybaraIO/doc/tree/main/docs/stacks.js/guides/update-profile.md",tags:[],version:"current",frontMatter:{title:"Update User Profile"}},c={},d=[{value:"Install dependency",id:"install-dependency",level:2},{value:"Initiate session",id:"initiate-session",level:2},{value:"Prompt to update the profile",id:"prompt-to-update-the-profile",level:2},{value:"Lookup a Public Profile",id:"lookup-a-public-profile",level:2},{value:"Usage in React Apps",id:"usage-in-react-apps",level:2},{value:"Profile Update Request / Response Payload",id:"profile-update-request--response-payload",level:2},{value:"Profile Update Request Payload",id:"profile-update-request-payload",level:3},{value:"Profile Update Response payload",id:"profile-update-response-payload",level:3}],u={toc:d},h="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(h,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(o.ZP,{mdxType:"StacksjsStartersNote"}),(0,r.kt)("p",null,"This guide explains how to change the universal profile of an authenticated user."),(0,r.kt)("p",null,"When a user creates a new account with Leather Wallet a basic profile is created and stored on the user's own storage hub. The basic profile contains\nonly a public key. It can be extended to contain personal information like an avatar,name and description. It is always cryptographically signed by the user's key, the so-called owner key."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Hiro provides a hosting services for storage hubs. Learn about hosting a storage hub at ",(0,r.kt)("a",{parentName:"p",href:"https://docs.hiro.so/tutorials/gaia-amazon-deploy"},"this tutorial"),".")),(0,r.kt)("p",null,"For users with BNS names, the profile can be read by any user. This extended profile can be used by any application to show a personalized user card\nlike this:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/1449049/215344771-455d3345-b890-49d0-9cfa-fd1f92bf5b1e.png",alt:"image"})),(0,r.kt)("p",null,"In order to update the public profile, apps can make request to the Stacks wallet. These requests are reviewed and confirmed by the user in the wallet similar to transaction signing."),(0,r.kt)("h2",{id:"install-dependency"},"Install dependency"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"In order to utilize the latest profile updating with the Leather Wallet, use a version >= 7.1.0 of the ",(0,r.kt)("inlineCode",{parentName:"p"},"@stacks/connect")," NPM package.")),(0,r.kt)("p",null,"The following dependency must be installed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm install @stacks/connect\n")),(0,r.kt)("p",null,"This also installs the NPM package ",(0,r.kt)("inlineCode",{parentName:"p"},"@stacks/profile"),". It contains the data type ",(0,r.kt)("inlineCode",{parentName:"p"},"PublicPersonProfile")," used for the public profile."),(0,r.kt)("h2",{id:"initiate-session"},"Initiate session"),(0,r.kt)("p",null,"Users must authenticate to an app before you request message signing. Users can install an authenticator like the ",(0,r.kt)("a",{parentName:"p",href:"https://leather.io/install-extension"},"Leather Wallet"),"."),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.hiro.so/build-apps/authentication"},"authentication guide")," before proceeding to integrate the following message signing capabilities."),(0,r.kt)("h2",{id:"prompt-to-update-the-profile"},"Prompt to update the profile"),(0,r.kt)("p",null,"After the user chose the content of the profile, create a ",(0,r.kt)("inlineCode",{parentName:"p"},"PublicPersonProfile")," object from that data and call the ",(0,r.kt)("inlineCode",{parentName:"p"},"openProfileUpdateRequestPopup")," function provided by the ",(0,r.kt)("inlineCode",{parentName:"p"},"connect")," package to trigger the display of the profile update prompt."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { openProfileUpdateRequestPopup } from '@stacks/connect';\n\nconst profile = {\n  '@type': 'Person',\n  '@context': 'https://schema.org',\n  name: 'Friedger',\n  image: [\n    { '@type': 'ImageObject', name: 'avatar', contentUrl: 'https://friedger.de/profile.png' },\n  ],\n};\n\nopenProfileUpdateRequestPopup({\n  profile,\n  appDetails: {\n    name: 'My App',\n    icon: 'https://example-app.com/my-app-logo.svg',\n  },\n  onFinish(data) {\n    console.log('Profile published', data);\n  },\n});\n")),(0,r.kt)("p",null,"Several parameters are available for calling ",(0,r.kt)("inlineCode",{parentName:"p"},"openProfileUpdateRequestPopup"),". Here is the exact interface for them:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"interface ProfileUpdateRequestOptions {\n  profile: PublicPersonProfile;\n  onFinish?: (data: PublicPersonProfile) => void;\n  onCancel?: () => void;\n  appDetails: {\n    name: string;\n    icon: string;\n  };\n  authOrigin?: string;\n  stxAddress?: string;\n  userSession?: UserSession;\n}\n")),(0,r.kt)("p",null,"After the profile was updated, the user can share the profile with other users."),(0,r.kt)("h2",{id:"lookup-a-public-profile"},"Lookup a Public Profile"),(0,r.kt)("p",null,"The public profile for a given BNS name can be looked up using\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hirosystems/stacks.js"},(0,r.kt)("inlineCode",{parentName:"a"},"stacks.js"))," ",(0,r.kt)("a",{parentName:"p",href:"https://stacks.js.org/functions/_stacks_auth.lookupProfile"},(0,r.kt)("inlineCode",{parentName:"a"},"lookupProfile"))," method."),(0,r.kt)("p",null,"The functions takes an object of type ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileLookupOptions")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"export interface ProfileLookupOptions {\n  username: string;\n  zoneFileLookupURL?: string;\n  network?: StacksNetworkName | StacksNetwork;\n}\n")),(0,r.kt)("p",null,"The function returns a promise with the data of the public profile if the data could be retrieved from the BNS name owner's storage and if the retrieved JSON token was sucessfully verified."),(0,r.kt)("p",null,"The recommended schema for the profile is as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"export interface PublicPersonProfile extends PublicProfileBase {\n  '@type': 'Person';\n  name?: string;\n  givenName?: string;\n  familyName?: string;\n  description?: string;\n  image?: { '@type': 'ImageObject'; name?: string; contentUrl?: string; [k: string]: unknown }[];\n  website?: {\n    '@type'?: string;\n    url?: string;\n    [k: string]: unknown;\n  }[];\n  account?: {\n    '@type'?: string;\n    service?: string;\n    identifier?: string;\n    proofType?: string;\n    proofUrl?: string;\n    proofMessage?: string;\n    proofSignature?: string;\n    [k: string]: unknown;\n  }[];\n  worksFor?: {\n    '@type'?: string;\n    '@id'?: string;\n    [k: string]: unknown;\n  }[];\n  knows?: {\n    '@type'?: string;\n    '@id'?: string;\n    [k: string]: unknown;\n  }[];\n  address?: {\n    '@type'?: string;\n    streetAddress?: string;\n    addressLocality?: string;\n    postalCode?: string;\n    addressCountry?: string;\n    [k: string]: unknown;\n  };\n  birthDate?: string;\n  taxID?: string;\n  [k: string]: unknown;\n}\n")),(0,r.kt)("h2",{id:"usage-in-react-apps"},"Usage in React Apps"),(0,r.kt)("p",null,"Import the ",(0,r.kt)("inlineCode",{parentName:"p"},"useConnect")," helper from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hirosystems/connect"},(0,r.kt)("inlineCode",{parentName:"a"},"connect-react"))," package to update profiles more seamlessly with React apps.\nYou must install a version >= 21.0.0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm install @stacks/connect-react\n")),(0,r.kt)("p",null,"Use the function with the same parameters as outlined above. However, you don't have to specify ",(0,r.kt)("inlineCode",{parentName:"p"},"appDetails")," since they are detected automatically if ",(0,r.kt)("inlineCode",{parentName:"p"},"useConnect")," has been used already ",(0,r.kt)("a",{parentName:"p",href:"/build-apps/authentication#usage-in-react-apps"},"for authentication"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useConnect } from '@stacks/connect-react';\n\nconst MyComponent = () => {\n  const { doProfileUpdate } = useConnect();\n\n  const onClick = async () => {\n    const options = {\n      /** See description above */\n    };\n    await doProfileUpdate(options);\n  };\n\n  return <span onClick={onClick}>Update Profile</span>;\n};\n")),(0,r.kt)("h2",{id:"profile-update-request--response-payload"},"Profile Update Request / Response Payload"),(0,r.kt)("p",null,"Under the hood, ",(0,r.kt)("inlineCode",{parentName:"p"},"@stacks/connect")," will serialize and deserialize data between your app and the Leather Wallet."),(0,r.kt)("p",null,"These payloads are tokens that conform to the ",(0,r.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7519"},"JSON Web Token (JWT) standard")," with additional support for the ",(0,r.kt)("inlineCode",{parentName:"p"},"secp256k1")," curve used by Bitcoin and many other cryptocurrencies."),(0,r.kt)("h3",{id:"profile-update-request-payload"},"Profile Update Request Payload"),(0,r.kt)("p",null,"When an application triggers a profile update from ",(0,r.kt)("inlineCode",{parentName:"p"},"@stacks/connect"),", the options of that profile update request are serialized into a ",(0,r.kt)("inlineCode",{parentName:"p"},"profileUpdateRequest")," payload. The ",(0,r.kt)("inlineCode",{parentName:"p"},"profileUpdateRequest")," is similar to the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.hiro.so/build-apps/authentication#authrequest-payload-schema"},"authRequest")," payload used for authentication."),(0,r.kt)("p",null,"The profile update request payload has the following schema, in addition to the standard JWT required fields:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"interface ProfileUpdatePayload {\n  profile: PublicPersonProfile;\n  publicKey: string;\n  /**\n   * Provide the Leather Wallet with a suggested account to sign this transaction with.\n   * This is set by default if a `userSession` option is provided.\n   */\n  stxAddress?: string;\n  appDetails?: AuthOptions['appDetails'];\n  network?: StacksNetwork;\n}\n")),(0,r.kt)("h3",{id:"profile-update-response-payload"},"Profile Update Response payload"),(0,r.kt)("p",null,"After the user confirms the update, a ",(0,r.kt)("inlineCode",{parentName:"p"},"profileUpdateResponse")," payload of type ",(0,r.kt)("inlineCode",{parentName:"p"},"PublicProfile")," is sent back to your app. It contains the updated profile as confirmed by the user. Note, that this profile can be different to the requested profile by the app because the user might have modified the profile in the wallet before confirming the changes."),(0,r.kt)(i.ZP,{mdxType:"StacksProviderSection"}))}f.isMDXComponent=!0}}]);