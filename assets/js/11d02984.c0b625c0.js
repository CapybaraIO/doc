"use strict";(self.webpackChunk_hirosystems_docs=self.webpackChunk_hirosystems_docs||[]).push([[6052],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>m});var l=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function r(t,e){if(null==t)return{};var n,l,i=function(t,e){if(null==t)return{};var n,l,i={},a=Object.keys(t);for(l=0;l<a.length;l++)n=a[l],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(l=0;l<a.length;l++)n=a[l],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var s=l.createContext({}),p=function(t){var e=l.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=p(t.components);return l.createElement(s.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},k=l.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,s=t.parentName,c=r(t,["components","mdxType","originalType","parentName"]),d=p(n),k=i,m=d["".concat(s,".").concat(k)]||d[k]||u[k]||a;return n?l.createElement(m,o(o({ref:e},c),{},{components:n})):l.createElement(m,o({ref:e},c))}));function m(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,o=new Array(a);o[0]=k;var r={};for(var s in e)hasOwnProperty.call(e,s)&&(r[s]=e[s]);r.originalType=t,r[d]="string"==typeof t?t:i,o[1]=r;for(var p=2;p<a;p++)o[p]=n[p];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}k.displayName="MDXCreateElement"},32145:(t,e,n)=>{n.r(e),n.d(e,{contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>s});var l=n(87462),i=(n(67294),n(3905));const a={},o="Stacking pool members",r={type:"api",id:"stacking-pool-members",unversionedId:"stacking-pool-members",title:"Stacking pool members",description:"",slug:"/stacking-pool-members",frontMatter:{},api:{description:"Retrieves the list of stacking pool members for a given delegator principal.",tags:["Stacking"],operationId:"get_pool_delegations",parameters:[{name:"pool_principal",in:"path",description:"Address principal of the stacking pool delegator",required:!0,schema:{type:"string"},example:"SPSCWDV3RKV5ZRN1FQD84YE1NQFEDJ9R1F4DYQ11"},{name:"after_block",in:"query",description:"If specified, only delegation events after the given block will be included",required:!1,schema:{type:"integer"}},{name:"unanchored",in:"query",description:"whether or not to include Stackers from unconfirmed transactions",required:!1,schema:{type:"boolean",default:!1},example:!0},{name:"limit",in:"query",description:"number of items to return",required:!1,schema:{type:"integer",default:100,maximum:200},example:100},{name:"offset",in:"query",description:"number of items to skip",required:!1,schema:{type:"integer",default:0},example:300}],responses:{200:{description:"Success",content:{"application/json":{schema:{description:"GET request that returns stacking pool member details for a given pool (delegator) principal",additionalProperties:!1,title:"PoolDelegationsResponse",type:"object",required:["results","limit","offset","total"],properties:{limit:{type:"integer",maximum:200,description:"The number of Stackers to return"},offset:{type:"integer",description:"The number to Stackers to skip (starting at `0`)",default:0},total:{type:"integer",description:"The total number of Stackers"},results:{type:"array",items:{title:"PoolDelegation",type:"object",additionalProperties:!1,required:["stacker","amount_ustx","block_height","tx_id"],properties:{stacker:{type:"string",description:"The principal of the pool member that issued the delegation"},pox_addr:{type:"string",description:"The pox-addr value specified by the stacker in the delegation operation"},amount_ustx:{type:"string",description:"The amount of uSTX delegated by the stacker"},burn_block_unlock_height:{type:"integer",description:"The optional burnchain block unlock height that the stacker may have specified"},block_height:{type:"integer",description:"The block height at which the stacker delegation transaction was mined at"},tx_id:{type:"string",description:"The tx_id of the stacker delegation operation"}}}}}},example:{limit:200,offset:0,total:2,results:[{stacker:"SPDGWQ60E1QXTC6E4VHKK0NG34EAX554WDFFFHMF",pox_addr:"bc1qxhmdufsvnuaaaer4ynz88fspdsxq2h9e9cetdj",amount_ustx:"2062697998",burn_block_unlock_height:781984,block_height:65917,tx_id:"0x3c81cd26ed172a7e552ed245b8b290abefa4f82dfc610a0091ac91c2eed7f9e6"},{stacker:"SP7RNXF7YBSS43TECXTHF7W1MAB221WWW8RKPGSN",pox_addr:"1Di1YoMov6Ua3gPedfQz7TkP6iTLqbPUzi",amount_ustx:"4815793194",block_height:65910,tx_id:"0x1692cd26ed172a7e552ed245b8b290abefa4f82dfc610a0091ac91c2eed7f9e6"}]}}}}},method:"get",path:"/extended/beta/stacking/{pool_principal}/delegations",servers:[{url:"https://api.mainnet.hiro.so/",description:"Mainnet"},{url:"https://api.testnet.hiro.so/",description:"Testnet"},{url:"http://localhost:3999/",description:"Local"}],info:{title:"Stacks Blockchain API",version:"v7.3.0",description:'Welcome to the API reference overview for the <a href="https://docs.hiro.so/get-started/stacks-blockchain-api">Stacks Blockchain API</a>.\n\n<a href="https://hirosystems.github.io/stacks-blockchain-api/collection.json" download="stacks-api-collection.json">Download Postman collection</a>\n'},postman:{name:"Stacking pool members",description:{content:"Retrieves the list of stacking pool members for a given delegator principal.",type:"text/plain"},url:{path:["extended","beta","stacking",":pool_principal","delegations"],host:["{{baseUrl}}"],query:[{description:{content:"If specified, only delegation events after the given block will be included",type:"text/plain"},key:"after_block",value:"<integer>"},{description:{content:"whether or not to include Stackers from unconfirmed transactions",type:"text/plain"},key:"unanchored",value:"false"},{description:{content:"number of items to return",type:"text/plain"},key:"limit",value:"100"},{description:{content:"number of items to skip",type:"text/plain"},key:"offset",value:"0"}],variable:[{description:{content:"(Required) Address principal of the stacking pool delegator",type:"text/plain"},type:"any",value:"<string>",key:"pool_principal"}]},method:"GET"}},source:"@site/openapi/stacks-blockchain-api.json",sourceDirName:".",permalink:"/doc/api/stacking-pool-members",previous:{title:"Transaction Events",permalink:"/doc/api/transaction-events"}},s=[],p={toc:s},c="wrapper";function d(t){let{components:e,...n}=t;return(0,i.kt)(c,(0,l.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"stacking-pool-members"},"Stacking pool members"),(0,i.kt)("p",null,"Retrieves the list of stacking pool members for a given delegator principal."),(0,i.kt)("table",{style:{display:"table",width:"100%"}},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{style:{textAlign:"left"}},"Path Parameters"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"pool_principal"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"Address principal of the stacking pool delegator")),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: SPSCWDV3RKV5ZRN1FQD84YE1NQFEDJ9R1F4DYQ11"))))),(0,i.kt)("table",{style:{display:"table",width:"100%"}},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{style:{textAlign:"left"}},"Query Parameters"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"after_block"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"If specified, only delegation events after the given block will be included")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"unanchored"),(0,i.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"whether or not to include Stackers from unconfirmed transactions")),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: true"))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"limit"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Possible values:")," value \u2264 200")),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"number of items to return")),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: 100"))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"offset"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"number of items to skip")),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: 300"))))),(0,i.kt)("table",{style:{display:"table",width:"100%"}},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("div",{style:{display:"flex"}},(0,i.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,i.kt)("code",null,"200")),(0,i.kt)("div",null,(0,i.kt)("p",null,"Success"))),(0,i.kt)("div",null,(0,i.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,i.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,i.kt)("div",null)))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"limit"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Possible values:")," value \u2264 200")),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The number of Stackers to return")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"offset"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The number to Stackers to skip (starting at ",(0,i.kt)("inlineCode",{parentName:"p"},"0"),")")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"total"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The total number of Stackers")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"results"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object[]"),(0,i.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"stacker"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The principal of the pool member that issued the delegation")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"pox_addr"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The pox-addr value specified by the stacker in the delegation operation")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"amount_ustx"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The amount of uSTX delegated by the stacker")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"burn_block_unlock_height"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The optional burnchain block unlock height that the stacker may have specified")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"block_height"),(0,i.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The block height at which the stacker delegation transaction was mined at")))),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("code",null,"tx_id"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string"),(0,i.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,i.kt)("p",null,"The tx_id of the stacker delegation operation"))))))))))))))))}d.isMDXComponent=!0}}]);