"use strict";(self.webpackChunk_CapybaraIO_docs=self.webpackChunk_CapybaraIO_docs||[]).push([[5939],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>k});var r=n(67294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var c=r.createContext({}),s=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=s(t.components);return r.createElement(c.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,c=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),u=s(n),f=o,k=u["".concat(c,".").concat(f)]||u[f]||d[f]||a;return n?r.createElement(k,i(i({ref:e},p),{},{components:n})):r.createElement(k,i({ref:e},p))}));function k(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,i=new Array(a);i[0]=f;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l[u]="string"==typeof t?t:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},39976:(t,e,n)=>{n.r(e),n.d(e,{contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const a={},i="Get account info",l={type:"api",id:"get-account-info",unversionedId:"get-account-info",title:"Get account info",description:"",slug:"/get-account-info",frontMatter:{},api:{tags:["Accounts"],operationId:"get_account_info",description:"Retrieves the account data for a given Account or a Contract Identifier\n\nWhere balance is the hex encoding of a unsigned 128-bit integer (big-endian), nonce is an unsigned 64-bit integer, and the proofs are provided as hex strings.\n\nFor non-existent accounts, this does not return a 404 error, rather it returns an object with balance and nonce of 0.\n",parameters:[{name:"principal",in:"path",description:"Stacks address or a Contract identifier",required:!0,schema:{type:"string"},example:"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0"},{name:"proof",in:"query",description:"Returns object without the proof field if set to 0",schema:{type:"integer"}},{name:"tip",in:"query",schema:{type:"string"},description:"The Stacks chain tip to query from"}],responses:{200:{description:"Success",content:{"application/json":{schema:{description:"GET request for account data",title:"AccountDataResponse",type:"object",additionalProperties:!1,required:["balance","locked","unlock_height","nonce","balance_proof","nonce_proof"],properties:{balance:{type:"string"},locked:{type:"string"},unlock_height:{type:"integer"},nonce:{type:"integer"},balance_proof:{type:"string"},nonce_proof:{type:"string"}}},example:{balance:"0x0000000000000000000000000007a120",locked:"0x0000000000000000000000000007a120",unlock_height:126,nonce:2867,balance_proof:"0xabce",nonce_proof:"0xabcd"}}}}},method:"get",path:"/v2/accounts/{principal}",servers:[{url:"https://api.mainnet.hiro.so/",description:"Mainnet"},{url:"https://api.testnet.hiro.so/",description:"Testnet"},{url:"http://localhost:3999/",description:"Local"}],info:{title:"Stacks Blockchain API",version:"v7.3.0",description:'Welcome to the API reference overview for the <a href="https://capybaraio.github.io/doc/get-started/stacks-blockchain-api">Stacks Blockchain API</a>.\n\n<a href="https://hirosystems.github.io/stacks-blockchain-api/collection.json" download="stacks-api-collection.json">Download Postman collection</a>\n'},postman:{name:"Get account info",description:{content:"Retrieves the account data for a given Account or a Contract Identifier\n\nWhere balance is the hex encoding of a unsigned 128-bit integer (big-endian), nonce is an unsigned 64-bit integer, and the proofs are provided as hex strings.\n\nFor non-existent accounts, this does not return a 404 error, rather it returns an object with balance and nonce of 0.\n",type:"text/plain"},url:{path:["v2","accounts",":principal"],host:["{{baseUrl}}"],query:[{description:{content:"Returns object without the proof field if set to 0",type:"text/plain"},key:"proof",value:"<integer>"},{description:{content:"The Stacks chain tip to query from",type:"text/plain"},key:"tip",value:"<string>"}],variable:[{description:{content:"(Required) Stacks address or a Contract identifier",type:"text/plain"},type:"any",value:"<string>",key:"principal"}]},method:"GET"}},source:"@site/openapi/stacks-blockchain-api.json",sourceDirName:".",permalink:"/doc/api/get-account-info",previous:{title:"Get nft events",permalink:"/doc/api/get-nft-events"},next:{title:"Get estimated fee",permalink:"/doc/api/get-estimated-fee"}},c=[],s={toc:c},p="wrapper";function u(t){let{components:e,...n}=t;return(0,o.kt)(p,(0,r.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"get-account-info"},"Get account info"),(0,o.kt)("p",null,"Retrieves the account data for a given Account or a Contract Identifier"),(0,o.kt)("p",null,"Where balance is the hex encoding of a unsigned 128-bit integer (big-endian), nonce is an unsigned 64-bit integer, and the proofs are provided as hex strings."),(0,o.kt)("p",null,"For non-existent accounts, this does not return a 404 error, rather it returns an object with balance and nonce of 0."),(0,o.kt)("table",{style:{display:"table",width:"100%"}},(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("th",{style:{textAlign:"left"}},"Path Parameters"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"principal"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string"),(0,o.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,o.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Stacks address or a Contract identifier")),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0"))))),(0,o.kt)("table",{style:{display:"table",width:"100%"}},(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("th",{style:{textAlign:"left"}},"Query Parameters"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"proof"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Returns object without the proof field if set to 0")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"tip"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"The Stacks chain tip to query from")))))),(0,o.kt)("table",{style:{display:"table",width:"100%"}},(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("div",{style:{display:"flex"}},(0,o.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,o.kt)("code",null,"200")),(0,o.kt)("div",null,(0,o.kt)("p",null,"Success"))),(0,o.kt)("div",null,(0,o.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,o.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,o.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,o.kt)("div",null)))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"balance"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"locked"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"unlock_height"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"nonce"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"balance_proof"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string"))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"nonce_proof"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string")))))))))))}u.isMDXComponent=!0}}]);