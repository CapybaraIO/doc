"use strict";(self.webpackChunk_hirosystems_docs=self.webpackChunk_hirosystems_docs||[]).push([[9188],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>y});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,y=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(y,i(i({ref:t},s),{},{components:n})):r.createElement(y,i({ref:t},s))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},72258:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={title:"Deploy Contracts"},i=void 0,l={unversionedId:"clarinet/guides/how-to-deploy-contracts",id:"clarinet/guides/how-to-deploy-contracts",title:"Deploy Contracts",description:"You can use Clarinet to publish your contracts to the public testnet or mainnet for testing or production.",source:"@site/docs/clarinet/guides/how-to-deploy-contracts.md",sourceDirName:"clarinet/guides",slug:"/clarinet/guides/how-to-deploy-contracts",permalink:"/doc/clarinet/guides/how-to-deploy-contracts",draft:!1,editUrl:"https://github.com/CapybaraIO/doc/tree/main/docs/clarinet/guides/how-to-deploy-contracts.md",tags:[],version:"current",frontMatter:{title:"Deploy Contracts"},sidebar:"clarinet",previous:{title:"Debug Contract",permalink:"/doc/clarinet/guides/how-to-debug-contract"},next:{title:"Deploy Clarinet with Subnets",permalink:"/doc/clarinet/guides/how-to-deploy-with-subnets"}},c={},p=[],s={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can use Clarinet to publish your contracts to the public testnet or mainnet for testing or production."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Topics covered in this guide"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#generate-deployment-plan"},"Generate deployment plan")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#deploy"},"Deploy your contract"))),(0,o.kt)("h1",{id:"generate-deployment-plan"},"Generate Deployment plan"),(0,o.kt)("p",null,"The first step is to generate a deployment plan with the command below (note: replace ",(0,o.kt)("inlineCode",{parentName:"p"},"--mainnet")," with ",(0,o.kt)("inlineCode",{parentName:"p"},"--testnet")," to deploy to the latter). Please specify a cost strategy to incentivize miners to carry your transaction (either ",(0,o.kt)("inlineCode",{parentName:"p"},"--low-cost"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"--medium-cost"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"--high-cost"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"--manual-cost"),"). The final command might look like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"clarinet deployment generate --mainnet --medium-cost\n")),(0,o.kt)("h1",{id:"deploy"},"Deploy"),(0,o.kt)("p",null,"After ",(0,o.kt)("strong",{parentName:"p"},"carefully")," reviewing (and updating if needed) the generated deployment plan, you can use the command below to handle the deployments of your contracts."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"clarinet deployment apply --mainnet\n")))}d.isMDXComponent=!0}}]);