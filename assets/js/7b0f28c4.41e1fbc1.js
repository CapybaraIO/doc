"use strict";(self.webpackChunk_hirosystems_docs=self.webpackChunk_hirosystems_docs||[]).push([[302],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,h=c["".concat(l,".").concat(m)]||c[m]||u[m]||i;return r?n.createElement(h,o(o({ref:t},d),{},{components:r})):n.createElement(h,o({ref:t},d))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},16707:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const i={Title:"Overview",displayed_sidebar:"ordinals-api"},o="Ordinals API Overview",s={unversionedId:"ordinals-api/index",id:"ordinals-api/index",title:"Ordinals API Overview",description:"The Ordinals API provides a service that indexes Bitcoin Ordinals data and offers a REST API to access and query this data.",source:"@site/docs/ordinals-api/index.md",sourceDirName:"ordinals-api",slug:"/ordinals-api/",permalink:"/doc/ordinals-api/",draft:!1,editUrl:"https://github.com/CapybaraIO/doc/tree/main/docs/ordinals-api/index.md",tags:[],version:"current",lastUpdatedAt:1703206175,formattedLastUpdatedAt:"Dec 22, 2023",frontMatter:{Title:"Overview",displayed_sidebar:"ordinals-api"},sidebar:"ordinals-api"},l={},p=[],d={toc:p},c="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ordinals-api-overview"},"Ordinals API Overview"),(0,a.kt)("p",null,"The Ordinals API provides a service that indexes Bitcoin Ordinals data and offers a REST API to access and query this data."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"NOTE:"))),(0,a.kt)("p",{parentName:"blockquote"},"To explore the detailed documentation for the API endpoints, request and response formats, you can refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.hiro.so/ordinals"},"OpenAPI specification"),"."),(0,a.kt)("p",{parentName:"blockquote"},"The source code for this project is available in our ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/hirosystems/ordinals-api"},"GitHub repository"),". You can explore the codebase, ",(0,a.kt)("a",{parentName:"p",href:"https://docs.hiro.so/contributors-guide"},"contribute"),", and raise ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/hirosystems/ordinals-api/issues"},"issues")," or ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/hirosystems/ordinals-api/pulls"},"pull requests"),".")),(0,a.kt)("p",null,"Here are the key features of the Ordinals API:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Ordinal Inscription Ingestion"),": The API helps with the complete ingestion of ordinal inscriptions. Using our endpoitns, you can retrieve the metadata for a particular inscription, all inscriptions held by a particular address, trading activity for inscriptions, and more."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"BRC-20 Support"),": The API offers support for BRC-20 tokens, a fungible token standard built on top of ordinal theory. Retrieve data for a particular BRC-20 token, a user's BRC-20 holdings, marketplace activity, and more."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"REST JSON Endpoints with ETag Caching"),": The API provides easy-to-use REST endpoints that return responses in JSON format. It also supports ",(0,a.kt)("em",{parentName:"p"},"ETag caching"),", which allows you to cache responses based on inscriptions. This helps optimize performance and reduce unnecessary requests."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Auto-Scale Server Configurations"),": The Ordinals API supports three run modes based on the ",(0,a.kt)("inlineCode",{parentName:"p"},"RUN_MODE")," environment variable:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"default"),": This mode runs all background jobs and the API server. It is suitable for running a single instance of the API."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"readonly"),": Only the API server runs in this mode. It is designed for auto-scaled clusters with multiple ",(0,a.kt)("inlineCode",{parentName:"li"},"readonly")," instances and a single ",(0,a.kt)("inlineCode",{parentName:"li"},"writeonly")," instance. The ",(0,a.kt)("inlineCode",{parentName:"li"},"writeonly")," instance is responsible for populating the database."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"writeonly"),": This mode is used in an auto-scaled environment to consume new inscriptions and push that data to a database. It works in conjunction with multiple ",(0,a.kt)("inlineCode",{parentName:"li"},"readonly")," instances.")),(0,a.kt)("h1",{id:"rate-limiting-for-ordinals-api"},"Rate Limiting for Ordinals API"),(0,a.kt)("p",null,"The following rate-limits (in requests per minute, or RPM) are applicable for all Hiro APIs as of ",(0,a.kt)("a",{parentName:"p",href:"https://www.hiro.so/blog/updated-rate-limits-for-hiro-apis"},"November, 2023"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"50 requests per minute, per client IP, for unauthenticated traffic (without an API key)"),(0,a.kt)("li",{parentName:"ul"},"500 requests per minute (regardless of origin IP) with an authenticated API key")),(0,a.kt)("p",null,"These new rate limits help us ensure fair usage of Hiro APIs and provide the best possible service as our community of developers and applications grow and scale."),(0,a.kt)("p",null,"Please ",(0,a.kt)("a",{parentName:"p",href:"https://survey.hiro.so/hiroapi"},"complete this form")," to apply for an API key."))}u.isMDXComponent=!0}}]);