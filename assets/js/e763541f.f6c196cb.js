"use strict";(self.webpackChunk_CapybaraIO_docs=self.webpackChunk_CapybaraIO_docs||[]).push([[7254],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},d="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,m=d["".concat(l,".").concat(u)]||d[u]||y[u]||a;return n?i.createElement(m,s(s({ref:t},c),{},{components:n})):i.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:r,s[1]=o;for(var p=2;p<a;p++)s[p]=n[p];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},14956:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var i=n(87462),r=(n(67294),n(3905));const a={},s="Transaction Events",o={type:"api",id:"transaction-events",unversionedId:"transaction-events",title:"Transaction Events",description:"",slug:"/transaction-events",frontMatter:{},api:{description:"Retrieves the list of events filtered by principal (STX address or Smart Contract ID), transaction id or event types. The list of event types is ('smart_contract_log', 'stx_lock', 'stx_asset', 'fungible_token_asset', 'non_fungible_token_asset').",tags:["Transactions"],operationId:"get_filtered_events",parameters:[{name:"tx_id",in:"query",description:"Hash of transaction",required:!1,schema:{type:"string"},example:"0x29e25515652dad41ef675bd0670964e3d537b80ec19cf6ca6f1dd65d5bc642c5"},{name:"address",in:"query",description:"Stacks address or a Contract identifier",required:!1,schema:{type:"string"},example:"ST1HB64MAJ1MBV4CQ80GF01DZS4T1DSMX20ADCRA4"},{name:"limit",in:"query",description:"number of items to return",required:!1,schema:{type:"integer"},example:100},{name:"offset",in:"query",description:"number of items to skip",required:!1,schema:{type:"integer"},example:42e3},{name:"type",in:"query",description:"Filter the events on event type",required:!1,schema:{type:"array",items:{type:"string",enum:["smart_contract_log","stx_lock","stx_asset","fungible_token_asset","non_fungible_token_asset"]}},example:"stx_lock"}],responses:{200:{description:"Success",content:{"application/json":{schema:{description:"GET event for the given transaction",title:"TransactionEventsResponse",type:"object",additionalProperties:!1,required:["results","limit","offset"],properties:{limit:{type:"integer"},offset:{type:"integer"},results:{type:"array",items:{type:"object",title:"TransactionEvent",anyOf:[{type:"object",title:"TransactionEventSmartContractLog",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","contract_log"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["smart_contract_log"]},tx_id:{type:"string"},contract_log:{type:"object",additionalProperties:!1,required:["contract_id","topic","value"],properties:{contract_id:{type:"string"},topic:{type:"string"},value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}}}}}},{type:"object",title:"TransactionEventStxLock",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","stx_lock_event"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["stx_lock"]},tx_id:{type:"string"},stx_lock_event:{type:"object",additionalProperties:!1,required:["locked_amount","unlock_height","locked_address"],properties:{locked_amount:{type:"string"},unlock_height:{type:"integer"},locked_address:{type:"string"}}}}},{type:"object",title:"TransactionEventStxAsset",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["stx_asset"]},tx_id:{type:"string"},asset:{type:"object",title:"TransactionEventAsset",additionalProperties:!1,properties:{asset_event_type:{title:"TransactionEventAssetType",type:"string",enum:["transfer","mint","burn"]},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},amount:{type:"string"},value:{type:"string"},memo:{type:"string"}}}}},{type:"object",title:"TransactionEventFungibleAsset",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["fungible_token_asset"]},tx_id:{type:"string"},asset:{type:"object",additionalProperties:!1,required:["asset_event_type","asset_id","sender","recipient","amount"],properties:{asset_event_type:{type:"string"},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},amount:{type:"string"}}}}},{type:"object",title:"TransactionEventNonFungibleAsset",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["non_fungible_token_asset"]},tx_id:{type:"string"},asset:{type:"object",additionalProperties:!1,required:["asset_event_type","asset_id","sender","recipient","value"],properties:{asset_event_type:{type:"string"},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}}}}}}]}}}},example:{limit:96,offset:0,events:[{event_index:0,event_type:"non_fungible_token_asset",tx_id:"0x05ccc123db703a2808afaaf88b6b3240f14391d14fde701bd20d7206c9133af6",asset:{asset_event_type:"transfer",asset_id:"ST000000000000000000002AMW42H.bns::names",sender:"STKVDRCTN8C81T22QHR9PG9GPD3V3WPQYBYFHPT4",recipient:"STRWN68C36Z7WTDD1TJERTAZ4SXDRMMDB29M4VNQ",value:{hex:"0x0c00000002046e616d65020000000a62696c616c7465737435096e616d6573706163650200000003627463",repr:"(tuple (name 0x62696c616c7465737435) (namespace 0x627463))"}}},{event_index:1,event_type:"smart_contract_log",tx_id:"0x05ccc123db703a2808afaaf88b6b3240f14391d14fde701bd20d7206c9133af6",contract_log:{contract_id:"ST000000000000000000002AMW42H.bns",topic:"print",value:{hex:"0x0c000000010a6174746163686d656e740c00000003106174746163686d656e742d696e646578010000000000000000000000000000028304686173680200000014b472a266d0bd89c13706a4132ccfb16f7c3b9fcb086d657461646174610c00000004046e616d65020000000a62696c616c7465737435096e616d6573706163650200000003627463026f700d0000000d6e616d652d7472616e736665720974782d73656e646572051a27b6e19aaa1880e842bc709b4130b347b1f2d7f2",repr:'(tuple (attachment (tuple (attachment-index u643) (hash 0xb472a266d0bd89c13706a4132ccfb16f7c3b9fcb) (metadata (tuple (name 0x62696c616c7465737435) (namespace 0x627463) (op "name-transfer") (tx-sender STKVDRCTN8C81T22QHR9PG9GPD3V3WPQYBYFHPT4))))))'}}}]}}}}},method:"get",path:"/extended/v1/tx/events",servers:[{url:"https://api.mainnet.hiro.so/",description:"Mainnet"},{url:"https://api.testnet.hiro.so/",description:"Testnet"},{url:"http://localhost:3999/",description:"Local"}],info:{title:"Stacks Blockchain API",version:"v7.3.0",description:'Welcome to the API reference overview for the <a href="https://capybaraio.github.io/doc/get-started/stacks-blockchain-api">Stacks Blockchain API</a>.\n\n<a href="https://hirosystems.github.io/stacks-blockchain-api/collection.json" download="stacks-api-collection.json">Download Postman collection</a>\n'},postman:{name:"Transaction Events",description:{content:"Retrieves the list of events filtered by principal (STX address or Smart Contract ID), transaction id or event types. The list of event types is ('smart_contract_log', 'stx_lock', 'stx_asset', 'fungible_token_asset', 'non_fungible_token_asset').",type:"text/plain"},url:{path:["extended","v1","tx","events"],host:["{{baseUrl}}"],query:[{description:{content:"Hash of transaction",type:"text/plain"},key:"tx_id",value:"<string>"},{description:{content:"Stacks address or a Contract identifier",type:"text/plain"},key:"address",value:"<string>"},{description:{content:"number of items to return",type:"text/plain"},key:"limit",value:"<integer>"},{description:{content:"number of items to skip",type:"text/plain"},key:"offset",value:"<integer>"},{description:{content:"Filter the events on event type",type:"text/plain"},key:"type",value:"<string>"},{description:{content:"Filter the events on event type",type:"text/plain"},key:"type",value:"<string>"}],variable:[]},method:"GET"}},source:"@site/openapi/stacks-blockchain-api.json",sourceDirName:".",permalink:"/doc/api/transaction-events",previous:{title:"Get approximate fees for a given transaction",permalink:"/doc/api/get-approximate-fees-for-a-given-transaction"},next:{title:"Stacking pool members",permalink:"/doc/api/stacking-pool-members"}},l=[],p={toc:l},c="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"transaction-events"},"Transaction Events"),(0,r.kt)("p",null,"Retrieves the list of events filtered by principal (STX address or Smart Contract ID), transaction id or event types. The list of event types is ('smart_contract_log', 'stx_lock', 'stx_asset', 'fungible_token_asset', 'non_fungible_token_asset')."),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Query Parameters"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"tx_id"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Hash of transaction")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: 0x29e25515652dad41ef675bd0670964e3d537b80ec19cf6ca6f1dd65d5bc642c5"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"address"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Stacks address or a Contract identifier")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: ST1HB64MAJ1MBV4CQ80GF01DZS4T1DSMX20ADCRA4"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"limit"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"number of items to return")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: 100"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"offset"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"number of items to skip")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: 42000"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"type"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string[]"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values:")," ","[",(0,r.kt)("inlineCode",{parentName:"p"},"smart_contract_log"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"stx_lock"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"stx_asset"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"fungible_token_asset"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"non_fungible_token_asset"),"]")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Filter the events on event type")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: stx_lock"))))),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"200")),(0,r.kt)("div",null,(0,r.kt)("p",null,"Success"))),(0,r.kt)("div",null,(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,r.kt)("div",null)))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"limit"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"offset"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"results"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object[]")))))))))))}d.isMDXComponent=!0}}]);