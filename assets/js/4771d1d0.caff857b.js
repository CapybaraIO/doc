"use strict";(self.webpackChunk_hirosystems_docs=self.webpackChunk_hirosystems_docs||[]).push([[6241],{3905:(t,e,o)=>{o.d(e,{Zo:()=>p,kt:()=>b});var l=o(67294);function n(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function i(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,l)}return o}function r(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?i(Object(o),!0).forEach((function(e){n(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function c(t,e){if(null==t)return{};var o,l,n=function(t,e){if(null==t)return{};var o,l,n={},i=Object.keys(t);for(l=0;l<i.length;l++)o=i[l],e.indexOf(o)>=0||(n[o]=t[o]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(l=0;l<i.length;l++)o=i[l],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(n[o]=t[o])}return n}var a=l.createContext({}),s=function(t){var e=l.useContext(a),o=e;return t&&(o="function"==typeof t?t(e):r(r({},e),t)),o},p=function(t){var e=s(t.components);return l.createElement(a.Provider,{value:e},t.children)},h="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},d=l.forwardRef((function(t,e){var o=t.components,n=t.mdxType,i=t.originalType,a=t.parentName,p=c(t,["components","mdxType","originalType","parentName"]),h=s(o),d=n,b=h["".concat(a,".").concat(d)]||h[d]||k[d]||i;return o?l.createElement(b,r(r({ref:e},p),{},{components:o})):l.createElement(b,r({ref:e},p))}));function b(t,e){var o=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=o.length,r=new Array(i);r[0]=d;var c={};for(var a in e)hasOwnProperty.call(e,a)&&(c[a]=e[a]);c.originalType=t,c[h]="string"==typeof t?t:n,r[1]=c;for(var s=2;s<i;s++)r[s]=o[s];return l.createElement.apply(null,r)}return l.createElement.apply(null,o)}d.displayName="MDXCreateElement"},1599:(t,e,o)=>{o.r(e),o.d(e,{contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var l=o(87462),n=(o(67294),o(3905));const i={},r="Get microblock",c={type:"api",id:"get-microblock",unversionedId:"get-microblock",title:"Get microblock",description:"",slug:"/get-microblock",frontMatter:{},api:{description:"Retrieves a specific microblock by `hash`",tags:["Microblocks"],operationId:"get_microblock_by_hash",responses:{200:{description:"Microblock",content:{"application/json":{schema:{title:"Microblock",description:"A microblock",type:"object",required:["canonical","microblock_canonical","microblock_hash","microblock_sequence","microblock_parent_hash","block_height","parent_block_height","parent_block_hash","block_hash","txs","parent_burn_block_time","parent_burn_block_time_iso","parent_burn_block_hash","parent_burn_block_height"],additionalProperties:!1,properties:{canonical:{type:"boolean",description:"Set to `true` if the microblock corresponds to the canonical chain tip."},microblock_canonical:{type:"boolean",description:"Set to `true` if the microblock was not orphaned in a following anchor block. Defaults to `true` if the following anchor block has not yet been created."},microblock_hash:{type:"string",description:"The SHA512/256 hash of this microblock."},microblock_sequence:{type:"integer",description:"A hint to describe how to order a set of microblocks. Starts at 0."},microblock_parent_hash:{type:"string",description:"The SHA512/256 hash of the previous signed microblock in this stream."},block_height:{type:"integer",description:"The anchor block height that confirmed this microblock."},parent_block_height:{type:"integer",description:"The height of the anchor block that preceded this microblock."},parent_block_hash:{type:"string",description:"The hash of the anchor block that preceded this microblock."},parent_burn_block_hash:{type:"string",description:"The hash of the Bitcoin block that preceded this microblock."},parent_burn_block_time:{type:"integer",description:"The block timestamp of the Bitcoin block that preceded this microblock."},parent_burn_block_time_iso:{type:"string",description:"The ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) formatted block time of the bitcoin block that preceded this microblock."},parent_burn_block_height:{type:"integer",description:"The height of the Bitcoin block that preceded this microblock."},block_hash:{type:"string",description:"The hash of the anchor block that confirmed this microblock. This wil be empty for unanchored microblocks",nullable:!0},txs:{type:"array",description:"List of transactions included in the microblock",items:{type:"string",description:"Transaction ID"}}}}}}},404:{description:"Cannot find microblock with given hash",content:{"application/json":{example:{error:"cannot find microblock by hash 0xabc123"}}}}},method:"get",path:"/extended/v1/microblock/{hash}",parameters:[{name:"hash",in:"path",description:"Hash of the microblock",required:!0,schema:{type:"string"},example:"0x3bfcdf84b3012adb544cf0f6df4835f93418c2269a3881885e27b3d58eb82d47"}],servers:[{url:"https://api.mainnet.hiro.so/",description:"Mainnet"},{url:"https://api.testnet.hiro.so/",description:"Testnet"},{url:"http://localhost:3999/",description:"Local"}],info:{title:"Stacks Blockchain API",version:"v7.3.0",description:'Welcome to the API reference overview for the <a href="https://docs.hiro.so/get-started/stacks-blockchain-api">Stacks Blockchain API</a>.\n\n<a href="https://hirosystems.github.io/stacks-blockchain-api/collection.json" download="stacks-api-collection.json">Download Postman collection</a>\n'},postman:{name:"Get microblock",description:{content:"Retrieves a specific microblock by `hash`",type:"text/plain"},url:{path:["extended","v1","microblock",":hash"],host:["{{baseUrl}}"],query:[],variable:[{description:{content:"(Required) Hash of the microblock",type:"text/plain"},type:"any",value:"<string>",key:"hash"}]},method:"GET"}},source:"@site/openapi/stacks-blockchain-api.json",sourceDirName:".",permalink:"/doc/api/get-microblock",previous:{title:"Get recent microblocks",permalink:"/doc/api/get-recent-microblocks"},next:{title:"Get the list of current transactions that belong to unanchored microblocks",permalink:"/doc/api/get-the-list-of-current-transactions-that-belong-to-unanchored-microblocks"}},a=[],s={toc:a},p="wrapper";function h(t){let{components:e,...o}=t;return(0,n.kt)(p,(0,l.Z)({},s,o,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"get-microblock"},"Get microblock"),(0,n.kt)("p",null,"Retrieves a specific microblock by ",(0,n.kt)("inlineCode",{parentName:"p"},"hash")),(0,n.kt)("table",{style:{display:"table",width:"100%"}},(0,n.kt)("thead",null,(0,n.kt)("tr",null,(0,n.kt)("th",{style:{textAlign:"left"}},"Path Parameters"))),(0,n.kt)("tbody",null,(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"hash"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,n.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"Hash of the microblock")),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: 0x3bfcdf84b3012adb544cf0f6df4835f93418c2269a3881885e27b3d58eb82d47"))))),(0,n.kt)("table",{style:{display:"table",width:"100%"}},(0,n.kt)("thead",null,(0,n.kt)("tr",null,(0,n.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,n.kt)("tbody",null,(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("div",{style:{display:"flex"}},(0,n.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,n.kt)("code",null,"200")),(0,n.kt)("div",null,(0,n.kt)("p",null,"Microblock"))),(0,n.kt)("div",null,(0,n.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,n.kt)("thead",null,(0,n.kt)("tr",null,(0,n.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,n.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,n.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,n.kt)("div",null)))),(0,n.kt)("tbody",null,(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"canonical"),(0,n.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"Set to ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," if the microblock corresponds to the canonical chain tip.")))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"microblock_canonical"),(0,n.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"Set to ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," if the microblock was not orphaned in a following anchor block. Defaults to ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," if the following anchor block has not yet been created.")))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"microblock_hash"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"The SHA512/256 hash of this microblock.")))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"microblock_sequence"),(0,n.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"A hint to describe how to order a set of microblocks. Starts at 0.")))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"microblock_parent_hash"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"The SHA512/256 hash of the previous signed microblock in this stream.")))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"block_height"),(0,n.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"The anchor block height that confirmed this microblock.")))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"parent_block_height"),(0,n.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"The height of the anchor block that preceded this microblock.")))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"parent_block_hash"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"The hash of the anchor block that preceded this microblock.")))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"parent_burn_block_hash"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"The hash of the Bitcoin block that preceded this microblock.")))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"parent_burn_block_time"),(0,n.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"The block timestamp of the Bitcoin block that preceded this microblock.")))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"parent_burn_block_time_iso"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"The ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) formatted block time of the bitcoin block that preceded this microblock.")))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"parent_burn_block_height"),(0,n.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"The height of the Bitcoin block that preceded this microblock.")))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"block_hash"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"The hash of the anchor block that confirmed this microblock. This wil be empty for unanchored microblocks")))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"txs"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string[]"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"List of transactions included in the microblock"))))))))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("div",{style:{display:"flex"}},(0,n.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,n.kt)("code",null,"404")),(0,n.kt)("div",null,(0,n.kt)("p",null,"Cannot find microblock with given hash"))),(0,n.kt)("div",null))))))}h.isMDXComponent=!0}}]);