"use strict";(self.webpackChunk_CapybaraIO_docs=self.webpackChunk_CapybaraIO_docs||[]).push([[6245],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),p=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(c.Provider,{value:t},e.children)},l="mdxType",_={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},y=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),l=p(n),y=r,u=l["".concat(c,".").concat(y)]||l[y]||_[y]||o;return n?i.createElement(u,s(s({ref:t},d),{},{components:n})):i.createElement(u,s({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=y;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[l]="string"==typeof e?e:r,s[1]=a;for(var p=2;p<o;p++)s[p]=n[p];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}y.displayName="MDXCreateElement"},76300:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=n(87462),r=(n(67294),n(3905));const o={},s="Non-Fungible Token holdings",a={type:"api",id:"non-fungible-token-holdings",unversionedId:"non-fungible-token-holdings",title:"Non-Fungible Token holdings",description:"",slug:"/non-fungible-token-holdings",frontMatter:{},api:{operationId:"get_nft_holdings",description:"Retrieves the list of Non-Fungible Tokens owned by the given principal (STX address or Smart Contract ID).\nResults can be filtered by one or more asset identifiers and can include metadata about the transaction that made the principal own each token.\n\nMore information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n",tags:["Non-Fungible Tokens"],parameters:[{name:"principal",in:"query",description:"token owner's STX address or Smart Contract ID",required:!0,schema:{type:"string"},example:"SPNWZ5V2TPWGQGVDR6T7B6RQ4XMGZ4PXTEE0VQ0S.marketplace-v3"},{name:"asset_identifiers",in:"query",description:"identifiers of the token asset classes to filter for",required:!1,schema:{type:"array",items:{type:"string"}},example:"SPQZF23W7SEYBFG5JQ496NMY0G7379SRYEDREMSV.Candy::candy"},{name:"limit",in:"query",description:"max number of tokens to fetch",required:!1,schema:{type:"integer",default:50}},{name:"offset",in:"query",description:"index of first tokens to fetch",required:!1,schema:{type:"integer",default:0},example:42e3},{name:"unanchored",in:"query",description:"whether or not to include tokens from unconfirmed transactions",required:!1,schema:{type:"boolean",default:!1},example:!0},{name:"tx_metadata",in:"query",description:"whether or not to include the complete transaction metadata instead of just `tx_id`. Enabling this option can affect performance and response times.",required:!1,schema:{type:"boolean",default:!1}}],responses:{200:{description:"List of Non-Fungible Token holdings",content:{"application/json":{schema:{description:"List of Non-Fungible Token holdings",title:"NonFungibleTokenHoldingsList",type:"object",required:["results","limit","offset","total"],additionalProperties:!1,properties:{limit:{type:"integer",maximum:200,description:"The number of Non-Fungible Token holdings to return"},offset:{type:"integer",description:"The number to Non-Fungible Token holdings to skip (starting at `0`)"},total:{type:"integer",description:"The number of Non-Fungible Token holdings available"},results:{type:"array",items:{type:"object",title:"NonFungibleTokenHolding",description:"Describes the ownership of a Non-Fungible Token",additionalProperties:!1,anyOf:[{type:"object",title:"NonFungibleTokenHoldingWithTxId",description:"Ownership of a Non-Fungible Token",required:["asset_identifier","value","tx_id","block_height"],additionalProperties:!1,properties:{asset_identifier:{type:"string"},value:{type:"object",required:["hex","repr"],description:"Non-Fungible Token value",additionalProperties:!1,properties:{hex:{type:"string",description:"Hex string representing the identifier of the Non-Fungible Token"},repr:{type:"string",description:"Readable string of the Non-Fungible Token identifier"}}},block_height:{type:"number"},tx_id:{type:"string"}}},{type:"object",title:"NonFungibleTokenHoldingWithTxMetadata",description:"Ownership of a Non-Fungible Token with transaction metadata",required:["asset_identifier","value","tx","block_height"],additionalProperties:!1,properties:{asset_identifier:{type:"string"},value:{type:"object",required:["hex","repr"],description:"Non-Fungible Token value",additionalProperties:!1,properties:{hex:{type:"string",description:"Hex string representing the identifier of the Non-Fungible Token"},repr:{type:"string",description:"Readable string of the Non-Fungible Token identifier"}}},block_height:{type:"number"},tx:{type:"object",title:"Transaction",description:"Describes all transaction types on Stacks 2.0 blockchain",anyOf:[{title:"TokenTransferTransaction",description:"Describes representation of a Type-0 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-0-transferring-an-asset",type:"object",required:["tx_type","token_transfer","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode","tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],additionalProperties:!1,properties:{tx_type:{type:"string",enum:["token_transfer"]},token_transfer:{type:"object",required:["recipient_address","amount","memo"],additionalProperties:!1,properties:{recipient_address:{type:"string"},amount:{type:"string",description:"Transfer amount as Integer string (64-bit unsigned integer)"},memo:{type:"string",description:"Hex encoded arbitrary message, up to 34 bytes length (should try decoding to an ASCII string)"}}},tx_id:{type:"string",description:"Transaction ID"},nonce:{type:"integer",description:"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},fee_rate:{type:"string",description:"Transaction fee as Integer string (64-bit unsigned integer)."},sender_address:{type:"string",description:"Address of the transaction initiator"},sponsor_nonce:{type:"integer"},sponsored:{type:"boolean",description:"Denotes whether the originating account is the same as the paying account"},sponsor_address:{type:"string"},post_condition_mode:{title:"PostConditionMode",description:"",type:"string",enum:["allow","deny"]},post_conditions:{type:"array",items:{title:"PostCondition",description:"Post-conditionscan limit the damage done to a user's assets",anyOf:[{title:"PostConditionStx",type:"object",required:["principal","condition_code","amount","type"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionFungibleConditionCode",description:"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",type:"string",enum:["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},amount:{type:"string"},type:{enum:["stx"],type:"string"}}},{title:"PostConditionFungible",type:"object",required:["principal","condition_code","amount","type","asset"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionFungibleConditionCode",description:"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",type:"string",enum:["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},type:{enum:["fungible"],type:"string"},amount:{type:"string"},asset:{type:"object",required:["asset_name","contract_address","contract_name"],additionalProperties:!1,properties:{asset_name:{type:"string"},contract_address:{type:"string"},contract_name:{type:"string"}}}}},{title:"PostConditionNonFungible",type:"object",required:["principal","condition_code","type","asset_value","asset"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionNonFungibleConditionCode",description:"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.",type:"string",enum:["sent","not_sent"]},type:{enum:["non_fungible"],type:"string"},asset_value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}},asset:{type:"object",required:["asset_name","contract_address","contract_name"],additionalProperties:!1,properties:{asset_name:{type:"string"},contract_address:{type:"string"},contract_name:{type:"string"}}}}}]}},anchor_mode:{title:"TransactionAnchorModeType",type:"string",enum:["on_chain_only","off_chain_only","any"],description:"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."},block_hash:{type:"string",description:"Hash of the blocked this transactions was associated with"},block_height:{type:"integer",description:"Height of the block this transactions was associated with"},burn_block_time:{type:"integer",description:"Unix timestamp (in seconds) indicating when this block was mined"},burn_block_time_iso:{type:"string",description:"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},parent_burn_block_time:{type:"integer",description:"Unix timestamp (in seconds) indicating when this parent block was mined"},parent_burn_block_time_iso:{type:"string",description:"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},canonical:{type:"boolean",description:"Set to `true` if block corresponds to the canonical chain tip"},tx_index:{type:"integer",description:"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},tx_status:{title:"TransactionStatus",description:"Status of the transaction",type:"string",enum:["success","abort_by_response","abort_by_post_condition"]},tx_result:{type:"object",required:["hex","repr"],description:"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",additionalProperties:!1,properties:{hex:{type:"string",description:"Hex string representing the value fo the transaction result"},repr:{type:"string",description:"Readable string of the transaction result"}}},event_count:{type:"integer",description:"Number of transaction events"},parent_block_hash:{type:"string",description:"Hash of the previous block."},is_unanchored:{type:"boolean",description:"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},microblock_hash:{type:"string",description:"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},microblock_sequence:{type:"integer",description:"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},microblock_canonical:{type:"boolean",description:"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},execution_cost_read_count:{type:"integer",description:"Execution cost read count."},execution_cost_read_length:{type:"integer",description:"Execution cost read length."},execution_cost_runtime:{type:"integer",description:"Execution cost runtime."},execution_cost_write_count:{type:"integer",description:"Execution cost write count."},execution_cost_write_length:{type:"integer",description:"Execution cost write length."},events:{type:"array",description:"List of transaction events",items:{type:"object",title:"TransactionEvent",anyOf:[{type:"object",title:"TransactionEventSmartContractLog",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","contract_log"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["smart_contract_log"]},tx_id:{type:"string"},contract_log:{type:"object",additionalProperties:!1,required:["contract_id","topic","value"],properties:{contract_id:{type:"string"},topic:{type:"string"},value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}}}}}},{type:"object",title:"TransactionEventStxLock",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","stx_lock_event"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["stx_lock"]},tx_id:{type:"string"},stx_lock_event:{type:"object",additionalProperties:!1,required:["locked_amount","unlock_height","locked_address"],properties:{locked_amount:{type:"string"},unlock_height:{type:"integer"},locked_address:{type:"string"}}}}},{type:"object",title:"TransactionEventStxAsset",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["stx_asset"]},tx_id:{type:"string"},asset:{type:"object",title:"TransactionEventAsset",additionalProperties:!1,properties:{asset_event_type:{title:"TransactionEventAssetType",type:"string",enum:["transfer","mint","burn"]},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},amount:{type:"string"},value:{type:"string"},memo:{type:"string"}}}}},{type:"object",title:"TransactionEventFungibleAsset",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["fungible_token_asset"]},tx_id:{type:"string"},asset:{type:"object",additionalProperties:!1,required:["asset_event_type","asset_id","sender","recipient","amount"],properties:{asset_event_type:{type:"string"},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},amount:{type:"string"}}}}},{type:"object",title:"TransactionEventNonFungibleAsset",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["non_fungible_token_asset"]},tx_id:{type:"string"},asset:{type:"object",additionalProperties:!1,required:["asset_event_type","asset_id","sender","recipient","value"],properties:{asset_event_type:{type:"string"},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}}}}}}]}}}},{type:"object",title:"SmartContractTransaction",description:"Describes representation of a Type-1 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract",required:["tx_type","smart_contract","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode","tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],additionalProperties:!1,properties:{tx_type:{type:"string",enum:["smart_contract"]},smart_contract:{type:"object",additionalProperties:!1,required:["contract_id","source_code"],properties:{clarity_version:{type:"number",description:"The Clarity version of the contract, only specified for versioned contract transactions, otherwise null",nullable:!0},contract_id:{type:"string",description:"Contract identifier formatted as `<principaladdress>.<contract_name>`"},source_code:{type:"string",description:"Clarity code of the smart contract being deployed"}}},tx_id:{type:"string",description:"Transaction ID"},nonce:{type:"integer",description:"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},fee_rate:{type:"string",description:"Transaction fee as Integer string (64-bit unsigned integer)."},sender_address:{type:"string",description:"Address of the transaction initiator"},sponsor_nonce:{type:"integer"},sponsored:{type:"boolean",description:"Denotes whether the originating account is the same as the paying account"},sponsor_address:{type:"string"},post_condition_mode:{title:"PostConditionMode",description:"",type:"string",enum:["allow","deny"]},post_conditions:{type:"array",items:{title:"PostCondition",description:"Post-conditionscan limit the damage done to a user's assets",anyOf:[{title:"PostConditionStx",type:"object",required:["principal","condition_code","amount","type"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionFungibleConditionCode",description:"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",type:"string",enum:["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},amount:{type:"string"},type:{enum:["stx"],type:"string"}}},{title:"PostConditionFungible",type:"object",required:["principal","condition_code","amount","type","asset"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionFungibleConditionCode",description:"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",type:"string",enum:["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},type:{enum:["fungible"],type:"string"},amount:{type:"string"},asset:{type:"object",required:["asset_name","contract_address","contract_name"],additionalProperties:!1,properties:{asset_name:{type:"string"},contract_address:{type:"string"},contract_name:{type:"string"}}}}},{title:"PostConditionNonFungible",type:"object",required:["principal","condition_code","type","asset_value","asset"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionNonFungibleConditionCode",description:"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.",type:"string",enum:["sent","not_sent"]},type:{enum:["non_fungible"],type:"string"},asset_value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}},asset:{type:"object",required:["asset_name","contract_address","contract_name"],additionalProperties:!1,properties:{asset_name:{type:"string"},contract_address:{type:"string"},contract_name:{type:"string"}}}}}]}},anchor_mode:{title:"TransactionAnchorModeType",type:"string",enum:["on_chain_only","off_chain_only","any"],description:"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."},block_hash:{type:"string",description:"Hash of the blocked this transactions was associated with"},block_height:{type:"integer",description:"Height of the block this transactions was associated with"},burn_block_time:{type:"integer",description:"Unix timestamp (in seconds) indicating when this block was mined"},burn_block_time_iso:{type:"string",description:"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},parent_burn_block_time:{type:"integer",description:"Unix timestamp (in seconds) indicating when this parent block was mined"},parent_burn_block_time_iso:{type:"string",description:"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},canonical:{type:"boolean",description:"Set to `true` if block corresponds to the canonical chain tip"},tx_index:{type:"integer",description:"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},tx_status:{title:"TransactionStatus",description:"Status of the transaction",type:"string",enum:["success","abort_by_response","abort_by_post_condition"]},tx_result:{type:"object",required:["hex","repr"],description:"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",additionalProperties:!1,properties:{hex:{type:"string",description:"Hex string representing the value fo the transaction result"},repr:{type:"string",description:"Readable string of the transaction result"}}},event_count:{type:"integer",description:"Number of transaction events"},parent_block_hash:{type:"string",description:"Hash of the previous block."},is_unanchored:{type:"boolean",description:"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},microblock_hash:{type:"string",description:"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},microblock_sequence:{type:"integer",description:"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},microblock_canonical:{type:"boolean",description:"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},execution_cost_read_count:{type:"integer",description:"Execution cost read count."},execution_cost_read_length:{type:"integer",description:"Execution cost read length."},execution_cost_runtime:{type:"integer",description:"Execution cost runtime."},execution_cost_write_count:{type:"integer",description:"Execution cost write count."},execution_cost_write_length:{type:"integer",description:"Execution cost write length."},events:{type:"array",description:"List of transaction events",items:{type:"object",title:"TransactionEvent",anyOf:[{type:"object",title:"TransactionEventSmartContractLog",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","contract_log"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["smart_contract_log"]},tx_id:{type:"string"},contract_log:{type:"object",additionalProperties:!1,required:["contract_id","topic","value"],properties:{contract_id:{type:"string"},topic:{type:"string"},value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}}}}}},{type:"object",title:"TransactionEventStxLock",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","stx_lock_event"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["stx_lock"]},tx_id:{type:"string"},stx_lock_event:{type:"object",additionalProperties:!1,required:["locked_amount","unlock_height","locked_address"],properties:{locked_amount:{type:"string"},unlock_height:{type:"integer"},locked_address:{type:"string"}}}}},{type:"object",title:"TransactionEventStxAsset",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["stx_asset"]},tx_id:{type:"string"},asset:{type:"object",title:"TransactionEventAsset",additionalProperties:!1,properties:{asset_event_type:{title:"TransactionEventAssetType",type:"string",enum:["transfer","mint","burn"]},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},amount:{type:"string"},value:{type:"string"},memo:{type:"string"}}}}},{type:"object",title:"TransactionEventFungibleAsset",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["fungible_token_asset"]},tx_id:{type:"string"},asset:{type:"object",additionalProperties:!1,required:["asset_event_type","asset_id","sender","recipient","amount"],properties:{asset_event_type:{type:"string"},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},amount:{type:"string"}}}}},{type:"object",title:"TransactionEventNonFungibleAsset",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["non_fungible_token_asset"]},tx_id:{type:"string"},asset:{type:"object",additionalProperties:!1,required:["asset_event_type","asset_id","sender","recipient","value"],properties:{asset_event_type:{type:"string"},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}}}}}}]}}}},{type:"object",title:"ContractCallTransaction",description:"Describes representation of a Type 2 Stacks 2.0 transaction: Contract Call",required:["tx_type","contract_call","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode","tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],additionalProperties:!1,properties:{tx_type:{type:"string",enum:["contract_call"]},contract_call:{type:"object",additionalProperties:!1,required:["contract_id","function_name","function_signature"],properties:{contract_id:{type:"string",description:"Contract identifier formatted as `<principaladdress>.<contract_name>`"},function_name:{type:"string",description:"Name of the Clarity function to be invoked"},function_signature:{type:"string",description:"Function definition, including function name and type as well as parameter names and types"},function_args:{type:"array",description:"List of arguments used to invoke the function",items:{type:"object",additionalProperties:!1,required:["hex","repr","name","type"],properties:{hex:{type:"string"},repr:{type:"string"},name:{type:"string"},type:{type:"string"}}}}}},tx_id:{type:"string",description:"Transaction ID"},nonce:{type:"integer",description:"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},fee_rate:{type:"string",description:"Transaction fee as Integer string (64-bit unsigned integer)."},sender_address:{type:"string",description:"Address of the transaction initiator"},sponsor_nonce:{type:"integer"},sponsored:{type:"boolean",description:"Denotes whether the originating account is the same as the paying account"},sponsor_address:{type:"string"},post_condition_mode:{title:"PostConditionMode",description:"",type:"string",enum:["allow","deny"]},post_conditions:{type:"array",items:{title:"PostCondition",description:"Post-conditionscan limit the damage done to a user's assets",anyOf:[{title:"PostConditionStx",type:"object",required:["principal","condition_code","amount","type"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionFungibleConditionCode",description:"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",type:"string",enum:["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},amount:{type:"string"},type:{enum:["stx"],type:"string"}}},{title:"PostConditionFungible",type:"object",required:["principal","condition_code","amount","type","asset"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionFungibleConditionCode",description:"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",type:"string",enum:["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},type:{enum:["fungible"],type:"string"},amount:{type:"string"},asset:{type:"object",required:["asset_name","contract_address","contract_name"],additionalProperties:!1,properties:{asset_name:{type:"string"},contract_address:{type:"string"},contract_name:{type:"string"}}}}},{title:"PostConditionNonFungible",type:"object",required:["principal","condition_code","type","asset_value","asset"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionNonFungibleConditionCode",description:"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.",type:"string",enum:["sent","not_sent"]},type:{enum:["non_fungible"],type:"string"},asset_value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}},asset:{type:"object",required:["asset_name","contract_address","contract_name"],additionalProperties:!1,properties:{asset_name:{type:"string"},contract_address:{type:"string"},contract_name:{type:"string"}}}}}]}},anchor_mode:{title:"TransactionAnchorModeType",type:"string",enum:["on_chain_only","off_chain_only","any"],description:"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."},block_hash:{type:"string",description:"Hash of the blocked this transactions was associated with"},block_height:{type:"integer",description:"Height of the block this transactions was associated with"},burn_block_time:{type:"integer",description:"Unix timestamp (in seconds) indicating when this block was mined"},burn_block_time_iso:{type:"string",description:"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},parent_burn_block_time:{type:"integer",description:"Unix timestamp (in seconds) indicating when this parent block was mined"},parent_burn_block_time_iso:{type:"string",description:"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},canonical:{type:"boolean",description:"Set to `true` if block corresponds to the canonical chain tip"},tx_index:{type:"integer",description:"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},tx_status:{title:"TransactionStatus",description:"Status of the transaction",type:"string",enum:["success","abort_by_response","abort_by_post_condition"]},tx_result:{type:"object",required:["hex","repr"],description:"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",additionalProperties:!1,properties:{hex:{type:"string",description:"Hex string representing the value fo the transaction result"},repr:{type:"string",description:"Readable string of the transaction result"}}},event_count:{type:"integer",description:"Number of transaction events"},parent_block_hash:{type:"string",description:"Hash of the previous block."},is_unanchored:{type:"boolean",description:"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},microblock_hash:{type:"string",description:"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},microblock_sequence:{type:"integer",description:"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},microblock_canonical:{type:"boolean",description:"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},execution_cost_read_count:{type:"integer",description:"Execution cost read count."},execution_cost_read_length:{type:"integer",description:"Execution cost read length."},execution_cost_runtime:{type:"integer",description:"Execution cost runtime."},execution_cost_write_count:{type:"integer",description:"Execution cost write count."},execution_cost_write_length:{type:"integer",description:"Execution cost write length."},events:{type:"array",description:"List of transaction events",items:{type:"object",title:"TransactionEvent",anyOf:[{type:"object",title:"TransactionEventSmartContractLog",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","contract_log"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["smart_contract_log"]},tx_id:{type:"string"},contract_log:{type:"object",additionalProperties:!1,required:["contract_id","topic","value"],properties:{contract_id:{type:"string"},topic:{type:"string"},value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}}}}}},{type:"object",title:"TransactionEventStxLock",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","stx_lock_event"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["stx_lock"]},tx_id:{type:"string"},stx_lock_event:{type:"object",additionalProperties:!1,required:["locked_amount","unlock_height","locked_address"],properties:{locked_amount:{type:"string"},unlock_height:{type:"integer"},locked_address:{type:"string"}}}}},{type:"object",title:"TransactionEventStxAsset",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["stx_asset"]},tx_id:{type:"string"},asset:{type:"object",title:"TransactionEventAsset",additionalProperties:!1,properties:{asset_event_type:{title:"TransactionEventAssetType",type:"string",enum:["transfer","mint","burn"]},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},amount:{type:"string"},value:{type:"string"},memo:{type:"string"}}}}},{type:"object",title:"TransactionEventFungibleAsset",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["fungible_token_asset"]},tx_id:{type:"string"},asset:{type:"object",additionalProperties:!1,required:["asset_event_type","asset_id","sender","recipient","amount"],properties:{asset_event_type:{type:"string"},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},amount:{type:"string"}}}}},{type:"object",title:"TransactionEventNonFungibleAsset",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["non_fungible_token_asset"]},tx_id:{type:"string"},asset:{type:"object",additionalProperties:!1,required:["asset_event_type","asset_id","sender","recipient","value"],properties:{asset_event_type:{type:"string"},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}}}}}}]}}}},{type:"object",title:"PoisonMicroblockTransaction",description:"Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock",required:["tx_type","poison_microblock","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode","tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],additionalProperties:!1,properties:{tx_type:{type:"string",enum:["poison_microblock"]},poison_microblock:{type:"object",required:["microblock_header_1","microblock_header_2"],additionalProperties:!1,properties:{microblock_header_1:{type:"string",description:"Hex encoded microblock header"},microblock_header_2:{type:"string",description:"Hex encoded microblock header"}}},tx_id:{type:"string",description:"Transaction ID"},nonce:{type:"integer",description:"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},fee_rate:{type:"string",description:"Transaction fee as Integer string (64-bit unsigned integer)."},sender_address:{type:"string",description:"Address of the transaction initiator"},sponsor_nonce:{type:"integer"},sponsored:{type:"boolean",description:"Denotes whether the originating account is the same as the paying account"},sponsor_address:{type:"string"},post_condition_mode:{title:"PostConditionMode",description:"",type:"string",enum:["allow","deny"]},post_conditions:{type:"array",items:{title:"PostCondition",description:"Post-conditionscan limit the damage done to a user's assets",anyOf:[{title:"PostConditionStx",type:"object",required:["principal","condition_code","amount","type"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionFungibleConditionCode",description:"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",type:"string",enum:["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},amount:{type:"string"},type:{enum:["stx"],type:"string"}}},{title:"PostConditionFungible",type:"object",required:["principal","condition_code","amount","type","asset"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionFungibleConditionCode",description:"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",type:"string",enum:["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},type:{enum:["fungible"],type:"string"},amount:{type:"string"},asset:{type:"object",required:["asset_name","contract_address","contract_name"],additionalProperties:!1,properties:{asset_name:{type:"string"},contract_address:{type:"string"},contract_name:{type:"string"}}}}},{title:"PostConditionNonFungible",type:"object",required:["principal","condition_code","type","asset_value","asset"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionNonFungibleConditionCode",description:"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.",type:"string",enum:["sent","not_sent"]},type:{enum:["non_fungible"],type:"string"},asset_value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}},asset:{type:"object",required:["asset_name","contract_address","contract_name"],additionalProperties:!1,properties:{asset_name:{type:"string"},contract_address:{type:"string"},contract_name:{type:"string"}}}}}]}},anchor_mode:{title:"TransactionAnchorModeType",type:"string",enum:["on_chain_only","off_chain_only","any"],description:"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."},block_hash:{type:"string",description:"Hash of the blocked this transactions was associated with"},block_height:{type:"integer",description:"Height of the block this transactions was associated with"},burn_block_time:{type:"integer",description:"Unix timestamp (in seconds) indicating when this block was mined"},burn_block_time_iso:{type:"string",description:"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},parent_burn_block_time:{type:"integer",description:"Unix timestamp (in seconds) indicating when this parent block was mined"},parent_burn_block_time_iso:{type:"string",description:"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},canonical:{type:"boolean",description:"Set to `true` if block corresponds to the canonical chain tip"},tx_index:{type:"integer",description:"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},tx_status:{title:"TransactionStatus",description:"Status of the transaction",type:"string",enum:["success","abort_by_response","abort_by_post_condition"]},tx_result:{type:"object",required:["hex","repr"],description:"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",additionalProperties:!1,properties:{hex:{type:"string",description:"Hex string representing the value fo the transaction result"},repr:{type:"string",description:"Readable string of the transaction result"}}},event_count:{type:"integer",description:"Number of transaction events"},parent_block_hash:{type:"string",description:"Hash of the previous block."},is_unanchored:{type:"boolean",description:"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},microblock_hash:{type:"string",description:"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},microblock_sequence:{type:"integer",description:"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},microblock_canonical:{type:"boolean",description:"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},execution_cost_read_count:{type:"integer",description:"Execution cost read count."},execution_cost_read_length:{type:"integer",description:"Execution cost read length."},execution_cost_runtime:{type:"integer",description:"Execution cost runtime."},execution_cost_write_count:{type:"integer",description:"Execution cost write count."},execution_cost_write_length:{type:"integer",description:"Execution cost write length."},events:{type:"array",description:"List of transaction events",items:{type:"object",title:"TransactionEvent",anyOf:[{type:"object",title:"TransactionEventSmartContractLog",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","contract_log"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["smart_contract_log"]},tx_id:{type:"string"},contract_log:{type:"object",additionalProperties:!1,required:["contract_id","topic","value"],properties:{contract_id:{type:"string"},topic:{type:"string"},value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}}}}}},{type:"object",title:"TransactionEventStxLock",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","stx_lock_event"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["stx_lock"]},tx_id:{type:"string"},stx_lock_event:{type:"object",additionalProperties:!1,required:["locked_amount","unlock_height","locked_address"],properties:{locked_amount:{type:"string"},unlock_height:{type:"integer"},locked_address:{type:"string"}}}}},{type:"object",title:"TransactionEventStxAsset",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["stx_asset"]},tx_id:{type:"string"},asset:{type:"object",title:"TransactionEventAsset",additionalProperties:!1,properties:{asset_event_type:{title:"TransactionEventAssetType",type:"string",enum:["transfer","mint","burn"]},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},amount:{type:"string"},value:{type:"string"},memo:{type:"string"}}}}},{type:"object",title:"TransactionEventFungibleAsset",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["fungible_token_asset"]},tx_id:{type:"string"},asset:{type:"object",additionalProperties:!1,required:["asset_event_type","asset_id","sender","recipient","amount"],properties:{asset_event_type:{type:"string"},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},amount:{type:"string"}}}}},{type:"object",title:"TransactionEventNonFungibleAsset",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["non_fungible_token_asset"]},tx_id:{type:"string"},asset:{type:"object",additionalProperties:!1,required:["asset_event_type","asset_id","sender","recipient","value"],properties:{asset_event_type:{type:"string"},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}}}}}}]}}}},{type:"object",title:"CoinbaseTransaction",description:"Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock",required:["tx_type","coinbase_payload","fee_rate","sender_address","sponsored","post_condition_mode","post_conditions","anchor_mode","tx_index","block_hash","block_height","burn_block_time","burn_block_time_iso","parent_burn_block_time","parent_burn_block_time_iso","canonical","tx_status","tx_result","events","event_count","parent_block_hash","is_unanchored","microblock_hash","microblock_sequence","microblock_canonical","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length"],additionalProperties:!1,properties:{tx_type:{type:"string",enum:["coinbase"]},coinbase_payload:{type:"object",additionalProperties:!1,required:["data"],properties:{data:{type:"string",description:"Hex encoded 32-byte scratch space for block leader's use"},alt_recipient:{type:"string",nullable:!0,description:"A principal that will receive the miner rewards for this coinbase transaction. Can be either a standard principal or contract principal. Only specified for `coinbase-to-alt-recipient` transaction types, otherwise null."}}},tx_id:{type:"string",description:"Transaction ID"},nonce:{type:"integer",description:"Used for ordering the transactions originating from and paying from an account. The nonce ensures that a transaction is processed at most once. The nonce counts the number of times an account's owner(s) have authorized a transaction. The first transaction from an account will have a nonce value equal to 0, the second will have a nonce value equal to 1, and so on."},fee_rate:{type:"string",description:"Transaction fee as Integer string (64-bit unsigned integer)."},sender_address:{type:"string",description:"Address of the transaction initiator"},sponsor_nonce:{type:"integer"},sponsored:{type:"boolean",description:"Denotes whether the originating account is the same as the paying account"},sponsor_address:{type:"string"},post_condition_mode:{title:"PostConditionMode",description:"",type:"string",enum:["allow","deny"]},post_conditions:{type:"array",items:{title:"PostCondition",description:"Post-conditionscan limit the damage done to a user's assets",anyOf:[{title:"PostConditionStx",type:"object",required:["principal","condition_code","amount","type"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionFungibleConditionCode",description:"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",type:"string",enum:["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},amount:{type:"string"},type:{enum:["stx"],type:"string"}}},{title:"PostConditionFungible",type:"object",required:["principal","condition_code","amount","type","asset"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionFungibleConditionCode",description:"A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",type:"string",enum:["sent_equal_to","sent_greater_than","sent_greater_than_or_equal_to","sent_less_than","sent_less_than_or_equal_to"]},type:{enum:["fungible"],type:"string"},amount:{type:"string"},asset:{type:"object",required:["asset_name","contract_address","contract_name"],additionalProperties:!1,properties:{asset_name:{type:"string"},contract_address:{type:"string"},contract_name:{type:"string"}}}}},{title:"PostConditionNonFungible",type:"object",required:["principal","condition_code","type","asset_value","asset"],additionalProperties:!1,properties:{principal:{title:"PostConditionPrincipal",type:"object",anyOf:[{type:"object",additionalProperties:!1,description:"Principal Origin",required:["type_id"],properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_origin"]}}},{type:"object",description:"Principal Standard",required:["type_id","address"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_standard"]},address:{type:"string"}}},{type:"object",description:"Principal Contract",required:["type_id","address","contract_name"],additionalProperties:!1,properties:{type_id:{type:"string",description:"String literal of type `PostConditionPrincipalType`",enum:["principal_contract"]},address:{type:"string"},contract_name:{type:"string"}}}]},condition_code:{title:"PostConditionNonFungibleConditionCode",description:"A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.",type:"string",enum:["sent","not_sent"]},type:{enum:["non_fungible"],type:"string"},asset_value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}},asset:{type:"object",required:["asset_name","contract_address","contract_name"],additionalProperties:!1,properties:{asset_name:{type:"string"},contract_address:{type:"string"},contract_name:{type:"string"}}}}}]}},anchor_mode:{title:"TransactionAnchorModeType",type:"string",enum:["on_chain_only","off_chain_only","any"],description:"`on_chain_only`: the transaction MUST be included in an anchored block, `off_chain_only`: the transaction MUST be included in a microblock, `any`: the leader can choose where to include the transaction."},block_hash:{type:"string",description:"Hash of the blocked this transactions was associated with"},block_height:{type:"integer",description:"Height of the block this transactions was associated with"},burn_block_time:{type:"integer",description:"Unix timestamp (in seconds) indicating when this block was mined"},burn_block_time_iso:{type:"string",description:"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."},parent_burn_block_time:{type:"integer",description:"Unix timestamp (in seconds) indicating when this parent block was mined"},parent_burn_block_time_iso:{type:"string",description:"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this parent block was mined."},canonical:{type:"boolean",description:"Set to `true` if block corresponds to the canonical chain tip"},tx_index:{type:"integer",description:"Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"},tx_status:{title:"TransactionStatus",description:"Status of the transaction",type:"string",enum:["success","abort_by_response","abort_by_post_condition"]},tx_result:{type:"object",required:["hex","repr"],description:"Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",additionalProperties:!1,properties:{hex:{type:"string",description:"Hex string representing the value fo the transaction result"},repr:{type:"string",description:"Readable string of the transaction result"}}},event_count:{type:"integer",description:"Number of transaction events"},parent_block_hash:{type:"string",description:"Hash of the previous block."},is_unanchored:{type:"boolean",description:"True if the transaction is included in a microblock that has not been confirmed by an anchor block."},microblock_hash:{type:"string",description:"The microblock hash that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be an empty string."},microblock_sequence:{type:"integer",description:"The microblock sequence number that this transaction was streamed in. If the transaction was batched in an anchor block (not included within a microblock) then this value will be 2147483647 (0x7fffffff, the max int32 value), this value preserves logical transaction ordering on (block_height, microblock_sequence, tx_index)."},microblock_canonical:{type:"boolean",description:"Set to `true` if microblock is anchored in the canonical chain tip, `false` if the transaction was orphaned in a micro-fork."},execution_cost_read_count:{type:"integer",description:"Execution cost read count."},execution_cost_read_length:{type:"integer",description:"Execution cost read length."},execution_cost_runtime:{type:"integer",description:"Execution cost runtime."},execution_cost_write_count:{type:"integer",description:"Execution cost write count."},execution_cost_write_length:{type:"integer",description:"Execution cost write length."},events:{type:"array",description:"List of transaction events",items:{type:"object",title:"TransactionEvent",anyOf:[{type:"object",title:"TransactionEventSmartContractLog",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","contract_log"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["smart_contract_log"]},tx_id:{type:"string"},contract_log:{type:"object",additionalProperties:!1,required:["contract_id","topic","value"],properties:{contract_id:{type:"string"},topic:{type:"string"},value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}}}}}},{type:"object",title:"TransactionEventStxLock",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","stx_lock_event"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["stx_lock"]},tx_id:{type:"string"},stx_lock_event:{type:"object",additionalProperties:!1,required:["locked_amount","unlock_height","locked_address"],properties:{locked_amount:{type:"string"},unlock_height:{type:"integer"},locked_address:{type:"string"}}}}},{type:"object",title:"TransactionEventStxAsset",description:"Only present in `smart_contract` and `contract_call` tx types.",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["stx_asset"]},tx_id:{type:"string"},asset:{type:"object",title:"TransactionEventAsset",additionalProperties:!1,properties:{asset_event_type:{title:"TransactionEventAssetType",type:"string",enum:["transfer","mint","burn"]},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},amount:{type:"string"},value:{type:"string"},memo:{type:"string"}}}}},{type:"object",title:"TransactionEventFungibleAsset",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["fungible_token_asset"]},tx_id:{type:"string"},asset:{type:"object",additionalProperties:!1,required:["asset_event_type","asset_id","sender","recipient","amount"],properties:{asset_event_type:{type:"string"},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},amount:{type:"string"}}}}},{type:"object",title:"TransactionEventNonFungibleAsset",required:["event_index","event_type","tx_id","asset"],additionalProperties:!1,properties:{event_index:{type:"integer"},event_type:{type:"string",enum:["non_fungible_token_asset"]},tx_id:{type:"string"},asset:{type:"object",additionalProperties:!1,required:["asset_event_type","asset_id","sender","recipient","value"],properties:{asset_event_type:{type:"string"},asset_id:{type:"string"},sender:{type:"string"},recipient:{type:"string"},value:{type:"object",additionalProperties:!1,required:["hex","repr"],properties:{hex:{type:"string"},repr:{type:"string"}}}}}}}]}}}}]}}}]}}}},examples:{default:{value:{limit:50,offset:0,total:3,results:[{asset_identifier:"SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild::The-Explorer-Guild",value:{hex:"0x0100000000000000000000000000000803",repr:"u2051"},block_height:36442,tx_id:"0x12e6f88724d0e630de26c376f172cf1781e25435e2b4ee54d36a949b244e429c"},{asset_identifier:"SP2BE8TZATXEVPGZ8HAFZYE5GKZ02X0YDKAN7ZTGW.arties::arties",value:{hex:"0x01000000000000000000000000000004f3",repr:"u1267"},block_height:37477,tx_id:"0xddc464c5e20a78dc5ac351913e0d9b9cce76fc955cc4599e0cccad960998f130"},{asset_identifier:"SP000000000000000000002Q6VF78.bns::names",value:{hex:"0x0c00000002046e616d65020000000672616661656c096e616d6573706163650200000003627463",repr:"(tuple (name 0x72616661656c) (namespace 0x627463))"},block_height:17250,tx_id:"0x0153a41ed24a0e1d32f66ea98338df09f942571ca66359e28bdca79ccd0305cf"}]}},"with transaction metadata":{value:{limit:50,offset:0,total:3,results:[{asset_identifier:"SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild::The-Explorer-Guild",value:{hex:"0x0100000000000000000000000000000803",repr:"u2051"},block_height:36442,tx:{tx_id:"0x12e6f88724d0e630de26c376f172cf1781e25435e2b4ee54d36a949b244e429c",nonce:7,fee_rate:"812000",sender_address:"SP3BK1NNSWN719Z6KDW05RBGVS940YCN6X84STYPR",sponsored:!1,post_condition_mode:"deny",post_conditions:[{type:"stx",condition_code:"sent_equal_to",amount:"100000000",principal:{type_id:"principal_standard",address:"SP3BK1NNSWN719Z6KDW05RBGVS940YCN6X84STYPR"}}],anchor_mode:"any",is_unanchored:!1,block_hash:"0x8a809916e35577337c3f9812a57d61666fde63932b1bdd1c4d1e2f24fb72d46c",parent_block_hash:"0xacf8dd56e08bd7986a5bae5e0f13d8dca8cb3a2dc5a1c4d739fda3b3b378b01d",block_height:36442,burn_block_time:1635994340,burn_block_time_iso:"2021-11-04T02:52:20.000Z",parent_burn_block_time:1635994054,parent_burn_block_time_iso:"2021-11-04T02:47:34.000Z",canonical:!0,tx_index:4,tx_status:"success",tx_result:{hex:"0x070100000000000000000000000000000803",repr:"(ok u2051)"},microblock_hash:"",microblock_sequence:2147483647,microblock_canonical:!0,event_count:2,events:[],execution_cost_read_count:14,execution_cost_read_length:91190,execution_cost_runtime:92297e3,execution_cost_write_count:3,execution_cost_write_length:19,tx_type:"contract_call",contract_call:{contract_id:"SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild-mint",function_name:"claim",function_signature:"(define-public (claim ))"}}},{asset_identifier:"SP2BE8TZATXEVPGZ8HAFZYE5GKZ02X0YDKAN7ZTGW.arties::arties",value:{hex:"0x01000000000000000000000000000004f3",repr:"u1267"},block_height:37477,tx:{tx_id:"0xddc464c5e20a78dc5ac351913e0d9b9cce76fc955cc4599e0cccad960998f130",nonce:10,fee_rate:"148800",sender_address:"SP3BK1NNSWN719Z6KDW05RBGVS940YCN6X84STYPR",sponsored:!1,post_condition_mode:"deny",post_conditions:[{type:"stx",condition_code:"sent_less_than_or_equal_to",amount:"98000000",principal:{type_id:"principal_standard",address:"SP3BK1NNSWN719Z6KDW05RBGVS940YCN6X84STYPR"}}],anchor_mode:"any",is_unanchored:!1,block_hash:"0xe69b275471bd199f957d82af1c36114695dbc9aa350e012c6326af4d9e4f3e9c",parent_block_hash:"0xe3f50b1c2ef72d44ee5ab84063f49b5662062a62160c783c1c2cc5ca424dcdeb",block_height:37477,burn_block_time:1636668151,burn_block_time_iso:"2021-11-11T22:02:31.000Z",parent_burn_block_time:1636666649,parent_burn_block_time_iso:"2021-11-11T21:37:29.000Z",canonical:!0,tx_index:38,tx_status:"success",tx_result:{hex:"0x0703",repr:"(ok true)"},microblock_hash:"0x92cb7e692a486210dc50a380e458cdf93c77d90b69d2a9cf29f09383b8b77937",microblock_sequence:0,microblock_canonical:!0,event_count:5,events:[],execution_cost_read_count:18,execution_cost_read_length:6832,execution_cost_runtime:8339e3,execution_cost_write_count:6,execution_cost_write_length:22,tx_type:"contract_call",contract_call:{contract_id:"SP2BE8TZATXEVPGZ8HAFZYE5GKZ02X0YDKAN7ZTGW.arties",function_name:"claim",function_signature:"(define-public (claim ))"}}},{asset_identifier:"SP000000000000000000002Q6VF78.bns::names",value:{hex:"0x0c00000002046e616d65020000000672616661656c096e616d6573706163650200000003627463",repr:"(tuple (name 0x72616661656c) (namespace 0x627463))"},block_height:17250,tx:{tx_id:"0x0153a41ed24a0e1d32f66ea98338df09f942571ca66359e28bdca79ccd0305cf",nonce:4,fee_rate:"228",sender_address:"SP3BK1NNSWN719Z6KDW05RBGVS940YCN6X84STYPR",sponsored:!1,post_condition_mode:"deny",post_conditions:[],anchor_mode:"any",is_unanchored:!1,block_hash:"0xb0a0832ece862e9b0d4a02e5f5ef427b09e9880fd3c834fcf63cb2617eac899c",parent_block_hash:"0xc3a3a6866cd8bd01b80f28d158eb14e0bd6e11d4b3de2f13f15c5c5b3721c4f0",block_height:17250,burn_block_time:1622650415,burn_block_time_iso:"2021-06-02T16:13:35.000Z",parent_burn_block_time:1622649808,parent_burn_block_time_iso:"2021-06-02T16:03:28.000Z",canonical:!0,tx_index:74,tx_status:"success",tx_result:{hex:"0x0703",repr:"(ok true)"},microblock_hash:"",microblock_sequence:2147483647,microblock_canonical:!0,event_count:2,events:[],execution_cost_read_count:17,execution_cost_read_length:44630,execution_cost_runtime:56773e3,execution_cost_write_count:4,execution_cost_write_length:604,tx_type:"contract_call",contract_call:{contract_id:"SP000000000000000000002Q6VF78.bns",function_name:"name-register",function_signature:"(define-public (name-register (namespace (buff 20)) (name (buff 48)) (salt (buff 20)) (zonefile-hash (buff 20))))",function_args:[{hex:"0x0200000003627463",repr:"0x627463",name:"namespace",type:"(buff 20)"},{hex:"0x020000000672616661656c",repr:"0x72616661656c",name:"name",type:"(buff 48)"},{hex:"0x020000001419db1f02d2b7ac9cddc8f98b6065d3fad558dcf4",repr:"0x19db1f02d2b7ac9cddc8f98b6065d3fad558dcf4",name:"salt",type:"(buff 20)"},{hex:"0x0200000014ab4ef66dae18da2ecfe7826bc7d8eaf0b19950c4",repr:"0xab4ef66dae18da2ecfe7826bc7d8eaf0b19950c4",name:"zonefile-hash",type:"(buff 20)"}]}}}]}}}}}}},method:"get",path:"/extended/v1/tokens/nft/holdings",servers:[{url:"https://api.mainnet.hiro.so/",description:"Mainnet"},{url:"https://api.testnet.hiro.so/",description:"Testnet"},{url:"http://localhost:3999/",description:"Local"}],info:{title:"Stacks Blockchain API",version:"v7.3.0",description:'Welcome to the API reference overview for the <a href="https://capybaraio.github.io/doc/get-started/stacks-blockchain-api">Stacks Blockchain API</a>.\n\n<a href="https://hirosystems.github.io/stacks-blockchain-api/collection.json" download="stacks-api-collection.json">Download Postman collection</a>\n'},postman:{name:"Non-Fungible Token holdings",description:{content:"Retrieves the list of Non-Fungible Tokens owned by the given principal (STX address or Smart Contract ID).\nResults can be filtered by one or more asset identifiers and can include metadata about the transaction that made the principal own each token.\n\nMore information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).\n",type:"text/plain"},url:{path:["extended","v1","tokens","nft","holdings"],host:["{{baseUrl}}"],query:[{description:{content:"(Required) token owner's STX address or Smart Contract ID",type:"text/plain"},key:"principal",value:"<string>"},{description:{content:"identifiers of the token asset classes to filter for",type:"text/plain"},key:"asset_identifiers",value:"<string>"},{description:{content:"identifiers of the token asset classes to filter for",type:"text/plain"},key:"asset_identifiers",value:"<string>"},{description:{content:"max number of tokens to fetch",type:"text/plain"},key:"limit",value:"50"},{description:{content:"index of first tokens to fetch",type:"text/plain"},key:"offset",value:"0"},{description:{content:"whether or not to include tokens from unconfirmed transactions",type:"text/plain"},key:"unanchored",value:"false"},{description:{content:"whether or not to include the complete transaction metadata instead of just `tx_id`. Enabling this option can affect performance and response times.",type:"text/plain"},key:"tx_metadata",value:"false"}],variable:[]},method:"GET"}},source:"@site/openapi/stacks-blockchain-api.json",sourceDirName:".",permalink:"/doc/api/non-fungible-token-holdings",previous:{title:"Fungible tokens metadata list",permalink:"/doc/api/fungible-tokens-metadata-list"},next:{title:"Non-Fungible Token history",permalink:"/doc/api/non-fungible-token-history"}},c=[],p={toc:c},d="wrapper";function l(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"non-fungible-token-holdings"},"Non-Fungible Token holdings"),(0,r.kt)("p",null,"Retrieves the list of Non-Fungible Tokens owned by the given principal (STX address or Smart Contract ID).\nResults can be filtered by one or more asset identifiers and can include metadata about the transaction that made the principal own each token."),(0,r.kt)("p",null,"More information on Non-Fungible Tokens on the Stacks blockchain can be found ",(0,r.kt)("a",{parentName:"p",href:"https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts"},"here"),"."),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Query Parameters"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"principal"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"token owner's STX address or Smart Contract ID")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: SPNWZ5V2TPWGQGVDR6T7B6RQ4XMGZ4PXTEE0VQ0S.marketplace-v3"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"asset_identifiers"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string[]"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"identifiers of the token asset classes to filter for")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: SPQZF23W7SEYBFG5JQ496NMY0G7379SRYEDREMSV.Candy::candy"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"limit"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"max number of tokens to fetch")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"offset"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"index of first tokens to fetch")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: 42000"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"unanchored"),(0,r.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"whether or not to include tokens from unconfirmed transactions")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: true"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"tx_metadata"),(0,r.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"whether or not to include the complete transaction metadata instead of just ",(0,r.kt)("inlineCode",{parentName:"p"},"tx_id"),". Enabling this option can affect performance and response times.")))))),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{display:"flex"}},(0,r.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,r.kt)("code",null,"200")),(0,r.kt)("div",null,(0,r.kt)("p",null,"List of Non-Fungible Token holdings"))),(0,r.kt)("div",null,(0,r.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,r.kt)("div",null)))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"limit"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Possible values:")," value \u2264 200")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The number of Non-Fungible Token holdings to return")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"offset"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The number to Non-Fungible Token holdings to skip (starting at ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),")")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"total"),(0,r.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The number of Non-Fungible Token holdings available")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"results"),(0,r.kt)("span",{style:{opacity:"0.6"}}," object[]")))))))))))}l.isMDXComponent=!0}}]);