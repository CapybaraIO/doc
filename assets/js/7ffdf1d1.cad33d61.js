"use strict";(self.webpackChunk_hirosystems_docs=self.webpackChunk_hirosystems_docs||[]).push([[711],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>h});var l=n(67294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function a(t,e){if(null==t)return{};var n,l,o=function(t,e){if(null==t)return{};var n,l,o={},i=Object.keys(t);for(l=0;l<i.length;l++)n=i[l],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(l=0;l<i.length;l++)n=i[l],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var r=l.createContext({}),s=function(t){var e=l.useContext(r),n=e;return t&&(n="function"==typeof t?t(e):c(c({},e),t)),n},d=function(t){var e=s(t.components);return l.createElement(r.Provider,{value:e},t.children)},p="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},b=l.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,r=t.parentName,d=a(t,["components","mdxType","originalType","parentName"]),p=s(n),b=o,h=p["".concat(r,".").concat(b)]||p[b]||k[b]||i;return n?l.createElement(h,c(c({ref:e},d),{},{components:n})):l.createElement(h,c({ref:e},d))}));function h(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,c=new Array(i);c[0]=b;var a={};for(var r in e)hasOwnProperty.call(e,r)&&(a[r]=e[r]);a.originalType=t,a[p]="string"==typeof t?t:o,c[1]=a;for(var s=2;s<i;s++)c[s]=n[s];return l.createElement.apply(null,c)}return l.createElement.apply(null,n)}b.displayName="MDXCreateElement"},48714:(t,e,n)=>{n.r(e),n.d(e,{contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>r});var l=n(87462),o=(n(67294),n(3905));const i={},c="Get recent blocks",a={type:"api",id:"get-recent-blocks",unversionedId:"get-recent-blocks",title:"Get recent blocks",description:"",slug:"/get-recent-blocks",frontMatter:{},api:{description:"Retrieves a list of recently mined blocks\n\nIf you need to actively monitor new blocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates.\n",tags:["Blocks"],operationId:"get_block_list",parameters:[{name:"limit",in:"query",description:"max number of blocks to fetch",required:!1,schema:{type:"integer",default:20,maximum:30}},{name:"offset",in:"query",description:"index of first block to fetch",required:!1,schema:{type:"integer"},example:42e3}],responses:{200:{description:"List of blocks",content:{"application/json":{schema:{description:"GET request that returns blocks",additionalProperties:!1,title:"BlockListResponse",type:"object",required:["results","limit","offset","total"],properties:{limit:{type:"integer",maximum:30,description:"The number of blocks to return"},offset:{type:"integer",description:"The number to blocks to skip (starting at `0`)",default:0},total:{type:"integer",description:"The number of blocks available"},results:{type:"array",items:{title:"Block",description:"A block",type:"object",additionalProperties:!1,required:["canonical","height","hash","index_block_hash","parent_block_hash","txs","burn_block_time","burn_block_time_iso","burn_block_hash","burn_block_height","miner_txid","parent_microblock_hash","parent_microblock_sequence","microblocks_accepted","microblocks_streamed","execution_cost_read_count","execution_cost_read_length","execution_cost_runtime","execution_cost_write_count","execution_cost_write_length","microblock_tx_count"],properties:{canonical:{type:"boolean",description:"Set to `true` if block corresponds to the canonical chain tip"},height:{type:"integer",description:"Height of the block"},hash:{type:"string",description:"Hash representing the block"},index_block_hash:{type:"string",description:"The only hash that can uniquely identify an anchored block or an unconfirmed state trie"},parent_block_hash:{type:"string",description:"Hash of the parent block"},burn_block_time:{type:"number",description:"Unix timestamp (in seconds) indicating when this block was mined."},burn_block_time_iso:{type:"string",description:"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this block was mined."},burn_block_hash:{type:"string",description:"Hash of the anchor chain block"},burn_block_height:{type:"integer",description:"Height of the anchor chain block"},miner_txid:{type:"string",description:"Anchor chain transaction ID"},parent_microblock_hash:{type:"string",description:"The hash of the last streamed block that precedes this block to which this block is to be appended. Not every anchored block will have a parent microblock stream. An anchored block that does not have a parent microblock stream has the parent microblock hash set to an empty string, and the parent microblock sequence number set to -1."},parent_microblock_sequence:{type:"integer",description:"The hash of the last streamed block that precedes this block to which this block is to be appended. Not every anchored block will have a parent microblock stream. An anchored block that does not have a parent microblock stream has the parent microblock hash set to an empty string, and the parent microblock sequence number set to -1."},txs:{type:"array",description:"List of transactions included in the block",items:{type:"string",description:"Transaction ID"}},microblocks_accepted:{type:"array",description:"List of microblocks that were accepted in this anchor block. Not every anchored block will have a accepted all (or any) of the previously streamed microblocks. Microblocks that were orphaned are not included in this list.",items:{type:"string",description:"Microblock hash"}},microblocks_streamed:{type:"array",description:"List of microblocks that were streamed/produced by this anchor block's miner. This list only includes microblocks that were accepted in the following anchor block. Microblocks that were orphaned are not included in this list.",items:{type:"string",description:"Microblock hash"}},execution_cost_read_count:{type:"integer",description:"Execution cost read count."},execution_cost_read_length:{type:"integer",description:"Execution cost read length."},execution_cost_runtime:{type:"integer",description:"Execution cost runtime."},execution_cost_write_count:{type:"integer",description:"Execution cost write count."},execution_cost_write_length:{type:"integer",description:"Execution cost write length."},microblock_tx_count:{type:"object",description:"List of txs counts in each accepted microblock",additionalProperties:{type:"number"}}}}}}},example:{limit:1,offset:0,total:21707,results:[{canonical:!0,height:21698,hash:"0x9be3e38eab9c7d094fd51792383c66706838d6392e95bc05cc730b8f7520e352",parent_block_hash:"0x76ee36d1d6c88e56b5c0e80f0d7bc7d3492141faf1b900efb19fcd00457d4654",burn_block_time:1626281749,burn_block_time_iso:"2021-07-14T16:55:49.000Z",burn_block_hash:"0x0000000000000000000ea16f8e906e85ee1cb4dff1e5424e93843b3cec8b0bcb",burn_block_height:691014,miner_txid:"0x118f7122a69441d13e6a3dfd4c3b0f9950be25195bb8126aae7fadea1aa9185d",parent_microblock_hash:"0x54647c277eefe60519b407f2c897749005fdb7f831034135063b2ee43fdacb04",parent_microblock_sequence:3,txs:["0x76f58b2eaff65a07a5971b241c4e71fee92ee0f9396809f911f90839f9004cac","0x32972d9052b068f218f6e13451f7aff937099b74bbf95fac7d9402295b1b3941","0x8cd30724c02a9cc1d8879a34dc136ebfdb2008420badcfb5947b92f85ebce79b","0xf5c1577f42d3753a508101e045dd2dc60491eb0aa552e0ecd0ad37cc697143f4","0x35e4c20e2838f999e0cf0b40c5fabce154c2df1912a1074150d26784c53f7a20","0x501eb42b82e5b7a7350b47fa143cd4e90bb46d43e4a7d22830b2bf2aa70b7922"],microblocks_accepted:["0x54647c277eefe60519b407f2c897749005fdb7f831034135063b2ee43fdacb04","0xdaf61d2b355f35c94cf019af99aeb73d8e7db7301c7cd693a464ebd1cfc2228c","0xb9e9b308cf9621ecbf66ca7b4689fe384b9b67c4588ec827d8163ab602fb935e","0x754562cba6ec243f90485e97778ab472f462fd123ef5b83cc79d8759ca8875f5"],microblocks_streamed:["0x54647c277eefe60519b407f2c897749005fdb7f831034135063b2ee43fdacb04","0xdaf61d2b355f35c94cf019af99aeb73d8e7db7301c7cd693a464ebd1cfc2228c","0xb9e9b308cf9621ecbf66ca7b4689fe384b9b67c4588ec827d8163ab602fb935e","0x754562cba6ec243f90485e97778ab472f462fd123ef5b83cc79d8759ca8875f5"]}]}}}}},method:"get",path:"/extended/v1/block",servers:[{url:"https://api.mainnet.hiro.so/",description:"Mainnet"},{url:"https://api.testnet.hiro.so/",description:"Testnet"},{url:"http://localhost:3999/",description:"Local"}],info:{title:"Stacks Blockchain API",version:"v7.3.0",description:'Welcome to the API reference overview for the <a href="https://docs.hiro.so/get-started/stacks-blockchain-api">Stacks Blockchain API</a>.\n\n<a href="https://hirosystems.github.io/stacks-blockchain-api/collection.json" download="stacks-api-collection.json">Download Postman collection</a>\n'},postman:{name:"Get recent blocks",description:{content:"Retrieves a list of recently mined blocks\n\nIf you need to actively monitor new blocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates.\n",type:"text/plain"},url:{path:["extended","v1","block"],host:["{{baseUrl}}"],query:[{description:{content:"max number of blocks to fetch",type:"text/plain"},key:"limit",value:"20"},{description:{content:"index of first block to fetch",type:"text/plain"},key:"offset",value:"<integer>"}],variable:[]},method:"GET"}},source:"@site/openapi/stacks-blockchain-api.json",sourceDirName:".",permalink:"/doc/api/get-recent-blocks",previous:{title:"Get the list of current transactions that belong to unanchored microblocks",permalink:"/doc/api/get-the-list-of-current-transactions-that-belong-to-unanchored-microblocks"},next:{title:"Get block by hash",permalink:"/doc/api/get-block-by-hash"}},r=[],s={toc:r},d="wrapper";function p(t){let{components:e,...n}=t;return(0,o.kt)(d,(0,l.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"get-recent-blocks"},"Get recent blocks"),(0,o.kt)("p",null,"Retrieves a list of recently mined blocks"),(0,o.kt)("p",null,"If you need to actively monitor new blocks, we highly recommend subscribing to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/hirosystems/stacks-blockchain-api/tree/master/client"},"WebSockets or Socket.io")," for real-time updates."),(0,o.kt)("table",{style:{display:"table",width:"100%"}},(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("th",{style:{textAlign:"left"}},"Query Parameters"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"limit"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Possible values:")," value \u2264 30")),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"max number of blocks to fetch")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"offset"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"index of first block to fetch")),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: 42000"))))),(0,o.kt)("table",{style:{display:"table",width:"100%"}},(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("th",{style:{textAlign:"left"}},"Responses"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("div",{style:{display:"flex"}},(0,o.kt)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"}},(0,o.kt)("code",null,"200")),(0,o.kt)("div",null,(0,o.kt)("p",null,"List of blocks"))),(0,o.kt)("div",null,(0,o.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("th",{style:{textAlign:"left"}},"Schema ",(0,o.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,o.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"}}," OPTIONAL"),(0,o.kt)("div",null)))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"limit"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Possible values:")," value \u2264 30")),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"The number of blocks to return")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"offset"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"The number to blocks to skip (starting at ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),")")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"total"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"The number of blocks available")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"results"),(0,o.kt)("span",{style:{opacity:"0.6"}}," object[]"),(0,o.kt)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"}},(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"canonical"),(0,o.kt)("span",{style:{opacity:"0.6"}}," boolean"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," if block corresponds to the canonical chain tip")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"height"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Height of the block")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"hash"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Hash representing the block")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"index_block_hash"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"The only hash that can uniquely identify an anchored block or an unconfirmed state trie")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"parent_block_hash"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Hash of the parent block")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"burn_block_time"),(0,o.kt)("span",{style:{opacity:"0.6"}}," number"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Unix timestamp (in seconds) indicating when this block was mined.")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"burn_block_time_iso"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this block was mined.")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"burn_block_hash"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Hash of the anchor chain block")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"burn_block_height"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Height of the anchor chain block")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"miner_txid"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Anchor chain transaction ID")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"parent_microblock_hash"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"The hash of the last streamed block that precedes this block to which this block is to be appended. Not every anchored block will have a parent microblock stream. An anchored block that does not have a parent microblock stream has the parent microblock hash set to an empty string, and the parent microblock sequence number set to -1.")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"parent_microblock_sequence"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"The hash of the last streamed block that precedes this block to which this block is to be appended. Not every anchored block will have a parent microblock stream. An anchored block that does not have a parent microblock stream has the parent microblock hash set to an empty string, and the parent microblock sequence number set to -1.")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"txs"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string[]"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"List of transactions included in the block")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"microblocks_accepted"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string[]"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"List of microblocks that were accepted in this anchor block. Not every anchored block will have a accepted all (or any) of the previously streamed microblocks. Microblocks that were orphaned are not included in this list.")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"microblocks_streamed"),(0,o.kt)("span",{style:{opacity:"0.6"}}," string[]"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"List of microblocks that were streamed/produced by this anchor block's miner. This list only includes microblocks that were accepted in the following anchor block. Microblocks that were orphaned are not included in this list.")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"execution_cost_read_count"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Execution cost read count.")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"execution_cost_read_length"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Execution cost read length.")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"execution_cost_runtime"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Execution cost runtime.")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"execution_cost_write_count"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Execution cost write count.")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"execution_cost_write_length"),(0,o.kt)("span",{style:{opacity:"0.6"}}," integer"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"Execution cost write length.")))),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("code",null,"microblock_tx_count"),(0,o.kt)("span",{style:{opacity:"0.6"}}," object"),(0,o.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,o.kt)("p",null,"List of txs counts in each accepted microblock"))))))))))))))))}p.isMDXComponent=!0}}]);